{
  final int n=model.getVertexCount();
  final int[] deg=new int[n];
  for (int i=0; i < n; i++) {
    final int m=model.getNextCount(i);
    for (int j=0; j < m; j++) {
      int v=model.getNext(i,j);
      deg[v]++;
    }
  }
  final int[] queue=new int[n];
  int first=0, last=0;
  for (int i=0; i < n; i++) {
    if (deg[i] == 0) {
      queue[last++]=i;
    }
  }
  final int[] result=new int[n];
  int done=0;
  BitSet doneSet=null;
  while (done < n) {
    for (; done < n; done++) {
      if (first == last) {
        break;
      }
      int v=queue[first++];
      final int m=model.getNextCount(v);
      for (int j=0; j < m; j++) {
        int u=model.getNext(v,j);
        if (--deg[u] == 0) {
          queue[last++]=u;
        }
      }
      result[done]=v;
    }
    if (done < n) {
      if (doneSet == null) {
        doneSet=new BitSet(n);
      }
      for (int i=doneSet.size(); i < done; i++) {
        doneSet.set(result[i]);
      }
      for (int i=0; i < n; i++) {
        if (!doneSet.get(i)) {
          deg[i]=0;
          queue[last++]=i;
          break;
        }
      }
    }
  }
  return result;
}
