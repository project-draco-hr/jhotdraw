{
  final List<List<Integer>> sets=new ArrayList<>(g.getVertexCount());
  for (int v=0, n=g.getVertexCount(); v < n; v++) {
    final List<Integer> initialSet=new ArrayList<>();
    initialSet.add(v);
    sets.add(initialSet);
  }
  for (int u=0, n=g.getVertexCount(); u < n; u++) {
    for (int v=0, m=g.getNextCount(u); v < m; v++) {
      final List<Integer> uset=sets.get(u);
      final List<Integer> vset=sets.get(v);
      if (uset != vset) {
        if (uset.size() < vset.size()) {
          for (          Integer uu : uset) {
            sets.set(uu,vset);
          }
          vset.addAll(uset);
        }
 else {
          for (          Integer vv : vset) {
            sets.set(vv,uset);
          }
          uset.addAll(vset);
        }
      }
    }
  }
  final Map<List<Integer>,Object> forestMap=new IdentityHashMap<List<Integer>,Object>();
  final List<Set<Integer>> forest=new ArrayList<>();
  for (  List<Integer> set : sets) {
    if (!forestMap.containsKey(set)) {
      forestMap.put(set,set);
      forest.add(new LinkedHashSet<>(set));
    }
  }
  return forest;
}
