{
  addFigureKeysAndNames("Layer",SimpleLayer.class,Figure.getDeclaredAndInheritedKeys(SimpleLayer.class));
  addFigureKeysAndNames("Rectangle",RectangleFigure.class,Figure.getDeclaredAndInheritedKeys(RectangleFigure.class));
  addFigureKeysAndNames("Group",GroupFigure.class,Figure.getDeclaredAndInheritedKeys(GroupFigure.class));
{
    Set<Key<?>> keys=Figure.getDeclaredAndInheritedKeys(SimpleDrawing.class);
    keys.remove(Drawing.USER_AGENT_STYLESHEETS);
    keys.remove(Drawing.AUTHOR_STYLESHEETS);
    addNodeListKey(TextFigure.class,"",TextFigure.TEXT);
    addFigureKeysAndNames("Drawing",SimpleDrawing.class,keys);
  }
{
    Set<Key<?>> keys=Figure.getDeclaredAndInheritedKeys(TextFigure.class);
    keys.remove(TextFigure.TEXT);
    addNodeListKey(TextFigure.class,"",TextFigure.TEXT);
    addFigureKeysAndNames("Text",TextFigure.class,keys);
  }
{
    Set<Key<?>> keys=Figure.getDeclaredAndInheritedKeys(SimpleLabelFigure.class);
    keys.remove(TextFigure.TEXT);
    addNodeListKey(SimpleLabelFigure.class,"",TextFigure.TEXT);
    addFigureKeysAndNames("Label",SimpleLabelFigure.class,keys);
  }
  addFigureKeysAndNames("Line",LineFigure.class,Figure.getDeclaredAndInheritedKeys(LineFigure.class));
  System.out.println("DefaultFigureFactory line:" + Figure.getDeclaredAndInheritedKeys(LineFigure.class));
  addFigureKeysAndNames("Ellipse",EllipseFigure.class,Figure.getDeclaredAndInheritedKeys(EllipseFigure.class));
  addFigureKeysAndNames("LineConnection",LineConnectionFigure.class,Figure.getDeclaredAndInheritedKeys(LineConnectionFigure.class));
  addConverter(Rectangle2D.class,new Rectangle2DConverter());
  addConverter(String.class,new DefaultConverter());
  addConverter(Point2D.class,new Point2DConverter());
  addConverter(Double.class,new NumberConverter());
  addConverter(URL.class,new UrlConverter());
  addConverter(URI.class,new UriConverter());
  addConverter(Connector.class,new DefaultConnectorConverter());
  addConverter(Paint.class,new XmlPaintConverter());
  addConverter(Figure.STYLE_CLASS.getFullValueType(),new CssObservableWordListConverter());
  checkConverters();
}
