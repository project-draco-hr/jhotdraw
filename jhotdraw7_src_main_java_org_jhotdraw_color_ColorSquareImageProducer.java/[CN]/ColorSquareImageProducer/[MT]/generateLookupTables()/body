{
  radials=new float[w * h];
  angulars=new float[w * h];
  alphas=new int[w * h];
  float maxR=modelColorSpace.getMaxValue(radialIndex);
  float minR=modelColorSpace.getMinValue(radialIndex);
  float extentR=maxR - minR;
  float maxA=modelColorSpace.getMaxValue(angularIndex);
  float minA=modelColorSpace.getMinValue(angularIndex);
  float extentA=maxA - minA;
  int side=Math.min(w - 1,h - 1);
  int xOffset=(w - side) / 2;
  int yOffset=(h - side) / 2 * w;
  float extentX=side - 1;
  float extentY=extentX;
  for (int x=0; x < side; x++) {
    float xRatio=(flipX) ? 1f - x / extentX : x / extentX;
    for (int y=0; y < side; y++) {
      float yRatio=(flipY) ? 1f - y / extentY : y / extentY;
      int index=x + y * w + xOffset + yOffset;
      alphas[index]=0xff000000;
      radials[index]=xRatio * extentR + minR;
      angulars[index]=yRatio * extentA + minA;
    }
  }
  isLookupValid=true;
}
