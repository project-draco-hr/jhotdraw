{
  if (createdFigure == null) {
    return;
  }
  if (dragStartIndex != -1) {
    List<Point2D> digitized=new ArrayList<>(points.size() - dragStartIndex);
    List<java.awt.geom.Point2D.Double> digiti=new ArrayList<>();
    for (int i=dragStartIndex, n=points.size(); i < n; i++) {
      digitized.add(points.get(i).getC0());
      digiti.add(new java.awt.geom.Point2D.Double(points.get(i).getC0().getX(),points.get(i).getC0().getY()));
    }
    BezierNodePathBuilder builder=new BezierNodePathBuilder();
    double error=5 / dv.getZoomFactor();
    BezierFit.fitBezierPath(builder,digitized,error);
    final ImmutableList<BezierNode> built=builder.build();
    ArrayList<BezierNode> newList=new ArrayList<>(dragStartIndex + built.size());
    for (int i=0; i < dragStartIndex; i++) {
      newList.add(points.get(i));
    }
    for (int i=0, n=built.size(); i < n; i++) {
      if (i == 0) {
        newList.add(built.get(i).setMask(built.get(i).getMask() & (BezierNode.MOVE_MASK ^ -1)));
      }
 else {
        newList.add(built.get(i));
      }
    }
    newList.add(points.get(points.size() - 1));
    points=newList;
    DrawingModel dm=dv.getModel();
    dm.set(createdFigure,key,ImmutableList.ofCollection(points));
  }
  dragStartIndex=-1;
}
