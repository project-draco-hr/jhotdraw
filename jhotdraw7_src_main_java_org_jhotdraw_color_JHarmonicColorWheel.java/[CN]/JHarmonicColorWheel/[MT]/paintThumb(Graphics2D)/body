{
  paintTicks(g);
  if (harmonicModel != null) {
    Point center=getCenter();
    Ellipse2D.Float oval=new Ellipse2D.Float(0,0,0,0);
    float[] comp=null;
    float wheelBrightness=model.getBoundedRangeModel(2).getValue() / 100f;
    for (int i=harmonicModel.size() - 1; i >= 0; i--) {
      if (harmonicModel.get(i) != null) {
        Point p=getColorLocation(harmonicModel.get(i));
        g.setColor(Color.black);
        g.drawLine(center.x,center.y,p.x,p.y);
      }
    }
    for (int i=harmonicModel.size() - 1; i >= 0; i--) {
      if (harmonicModel.get(i) != null) {
        Point p=getColorLocation(harmonicModel.get(i));
        Color mixerColor=harmonicModel.get(i);
        comp=ColorUtil.fromColor(harmonicModel.getColorSpace(),mixerColor);
        if (i == selectedIndex) {
          g.setColor(Color.white);
          oval.x=p.x - baseRadius;
          oval.y=p.y - baseRadius;
          oval.width=baseRadius * 2f;
          oval.height=baseRadius * 2f;
          g.fill(oval);
        }
        g.setColor(mixerColor);
        oval.x=p.x - handleRadius;
        oval.y=p.y - handleRadius;
        oval.width=handleRadius * 2f;
        oval.height=handleRadius * 2f;
        g.fill(oval);
        g.setColor(Color.black);
        g.draw(oval);
        if (i == harmonicModel.getBase()) {
          oval.x=p.x - baseRadius;
          oval.y=p.y - baseRadius;
          oval.width=baseRadius * 2f;
          oval.height=baseRadius * 2f;
          g.draw(oval);
        }
      }
    }
  }
}
