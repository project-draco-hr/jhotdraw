{
  javafx.scene.Group groupNode=(javafx.scene.Group)node;
  node.getTransforms().setAll(getLocalToParent(true));
  Rectangle contentBoundsNode=(Rectangle)groupNode.getProperties().get(CONTENT_BOUNDS_PROPERTY);
  Path pageBoundsNode=(Path)groupNode.getProperties().get(PAGE_BOUNDS_PROPERTY);
  Path pageInsetsNode=(Path)groupNode.getProperties().get(PAGE_INSETS_PROPERTY);
  javafx.scene.Group currentPageNode=(javafx.scene.Group)groupNode.getProperties().get(CURRENT_PAGE_PROPERTY);
  if (ctx.get(RenderContext.RENDERING_INTENT) == RenderingIntent.EDITOR) {
    applyHideableFigureProperties(node);
    contentBoundsNode.setVisible(true);
    pageBoundsNode.setVisible(true);
  }
 else   if (ctx.get(RenderContext.RENDER_PAGE) == this) {
    applyHideableFigureProperties(node);
    contentBoundsNode.setVisible(false);
    pageBoundsNode.setVisible(false);
    pageInsetsNode.setVisible(false);
  }
 else {
    node.setVisible(false);
  }
  double contentWidth=get(WIDTH);
  double contentHeight=get(HEIGHT);
  contentBoundsNode.setX(get(X));
  contentBoundsNode.setY(get(Y));
  contentBoundsNode.setWidth(contentWidth);
  contentBoundsNode.setHeight(contentHeight);
  int numPagesX=Math.max(1,getStyled(NUM_PAGES_X).intValue());
  int numPagesY=Math.max(1,getStyled(NUM_PAGES_Y).intValue());
  final int n=numPagesX * numPagesY;
  final List<PathElement> pbList=new ArrayList<>(n * 4);
  final List<PathElement> pmList=new ArrayList<>(n * 4);
  for (int i=0; i < n; i++) {
    addBounds(pbList,getPageBounds(i));
    addBounds(pmList,getContentBounds(i));
  }
  pageBoundsNode.getElements().setAll(pbList);
  pageInsetsNode.getElements().setAll(pmList);
  int currentPage=ctx.get(RenderContext.RENDER_PAGE_INTERNAL_NUMBER);
  currentPageNode.getTransforms().setAll(getPageTranslate(currentPage));
  List<Node> currentPageChildren=new ArrayList<Node>(getChildren().size() + 2);
  for (  Figure child : getChildren()) {
    currentPageChildren.add(ctx.getNode(child));
  }
  ObservableList<Node> group=currentPageNode.getChildren();
  if (!group.equals(currentPageChildren)) {
    group.setAll(currentPageChildren);
  }
}
