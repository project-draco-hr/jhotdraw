{
  CssTokenizerInterface tt=new CssTokenizer(new StringReader(in.toString()));
  tt.setSkipWhitespaces(true);
  String find=null;
  String replace=null;
switch (tt.nextToken()) {
case CssTokenizer.TT_STRING:
    find=tt.currentStringValue();
  break;
case CssTokenizer.TT_IDENT:
if ("none".equals(tt.currentStringValue())) {
}
 else {
  throw new ParseException("find string or none expected",tt.getStartPosition());
}
break;
default :
throw new ParseException("find string expected",tt.getStartPosition());
}
switch (tt.nextToken()) {
case CssTokenizer.TT_STRING:
replace=tt.currentStringValue();
break;
case CssTokenizer.TT_EOF:
break;
default :
throw new ParseException("replace string expected",tt.getStartPosition());
}
tt.skipWhitespace();
in.position(tt.getStartPosition());
return new Regex(find,replace);
}
