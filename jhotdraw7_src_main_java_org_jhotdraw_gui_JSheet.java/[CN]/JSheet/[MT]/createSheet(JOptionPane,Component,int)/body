{
  Window window=getWindowForComponent(parentComponent);
  final JSheet sheet;
  boolean isUndecorated;
  if (window instanceof Frame) {
    isUndecorated=((Frame)window).isUndecorated();
    sheet=new JSheet((Frame)window);
  }
 else {
    isUndecorated=((Dialog)window).isUndecorated();
    sheet=new JSheet((Dialog)window);
  }
  JComponent contentPane=(JComponent)sheet.getContentPane();
  contentPane.setLayout(new BorderLayout());
  if (isNativeSheetSupported() && !isUndecorated) {
    contentPane.setBorder(new EmptyBorder(12,0,0,0));
  }
  contentPane.add(pane,BorderLayout.CENTER);
  sheet.setResizable(false);
  sheet.addWindowListener(new WindowAdapter(){
    private boolean gotFocus=false;
    int count;
    public void windowClosing(    WindowEvent we){
      pane.setValue(null);
    }
    public void windowClosed(    WindowEvent we){
      if (pane.getValue() == JOptionPane.UNINITIALIZED_VALUE) {
        sheet.fireOptionSelected(pane);
      }
    }
    public void windowGainedFocus(    WindowEvent we){
      if (!gotFocus) {
        OptionPaneUI ui=pane.getUI();
        if (ui != null) {
          ui.selectInitialValue(pane);
        }
        gotFocus=true;
      }
    }
  }
);
  sheet.addComponentListener(new ComponentAdapter(){
    public void componentShown(    ComponentEvent ce){
      pane.setValue(JOptionPane.UNINITIALIZED_VALUE);
    }
  }
);
  pane.addPropertyChangeListener(new PropertyChangeListener(){
    public void propertyChange(    PropertyChangeEvent event){
      if (sheet.isVisible() && event.getSource() == pane && (event.getPropertyName().equals(JOptionPane.VALUE_PROPERTY)) && event.getNewValue() != null && event.getNewValue() != JOptionPane.UNINITIALIZED_VALUE) {
        sheet.setVisible(false);
        sheet.fireOptionSelected(pane);
      }
    }
  }
);
  sheet.pack();
  return sheet;
}
