{
  if (isAnimated() && isShowAsSheet()) {
    getContentPane().setVisible(false);
    final Rectangle startBounds=getBounds();
    int parentWidth=getParent().getWidth();
    final Rectangle endBounds=new Rectangle((parentWidth < startBounds.width) ? startBounds.x + (startBounds.width - parentWidth) / 2 : startBounds.x,startBounds.y,Math.min(startBounds.width,parentWidth),0);
    final Timer timer=new Timer(20,null);
    timer.addActionListener(new ActionListener(){
      long startTime;
      long endTime;
      public void actionPerformed(      ActionEvent evt){
        long now=System.currentTimeMillis();
        if (startTime == 0) {
          startTime=now;
          endTime=startTime + 200;
        }
        if (now > endTime) {
          timer.stop();
          hide0();
          setBounds(startBounds);
          getContentPane().setVisible(true);
          uninstallSheet();
        }
 else {
          float ratio=(now - startTime) / (float)(endTime - startTime);
          setBounds((int)(startBounds.x * (1f - ratio) + endBounds.x * ratio),(int)(startBounds.y * (1f - ratio) + endBounds.y * ratio),(int)(startBounds.width * (1f - ratio) + endBounds.width * ratio),(int)(startBounds.height * (1f - ratio) + endBounds.height * ratio));
        }
      }
    }
);
    timer.setRepeats(true);
    timer.setInitialDelay(5);
    timer.start();
  }
 else {
    hide0();
    uninstallSheet();
  }
}
