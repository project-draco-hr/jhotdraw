{
  DrawingEditor oldValue=getEditor();
  if (displayer != null) {
    displayer.dispose();
    displayer=null;
  }
  super.setEditor(newValue);
  if (newValue != null) {
    displayer=new SelectionComponentDisplayer(editor,this){
      @Override public void updateVisibility(){
        boolean newValue=editor != null && editor.getActiveView() != null && (isVisibleIfCreationTool && ((editor.getTool() instanceof TextCreationTool) || editor.getTool() instanceof TextAreaCreationTool) || containsTextHolderFigure(editor.getActiveView().getSelectedFigures()));
        component.setVisible(newValue);
        if (newValue) {
          component.setPreferredSize(null);
        }
 else {
          component.setPreferredSize(new Dimension(0,0));
        }
        component.revalidate();
      }
      private boolean containsTextHolderFigure(      Collection<Figure> figures){
        for (        Figure f : figures) {
          if (f instanceof TextHolderFigure) {
            return true;
          }
 else           if (f instanceof CompositeFigure) {
            if (containsTextHolderFigure(((CompositeFigure)f).getChildren())) {
              return true;
            }
          }
        }
        return false;
      }
    }
;
  }
}
