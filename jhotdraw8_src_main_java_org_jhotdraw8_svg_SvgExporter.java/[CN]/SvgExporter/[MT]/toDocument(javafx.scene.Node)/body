{
  try {
    DocumentBuilderFactory builderFactory=DocumentBuilderFactory.newInstance();
    Document doc;
    builderFactory.setNamespaceAware(true);
    DocumentBuilder builder=builderFactory.newDocumentBuilder();
    DOMImplementation domImpl=builder.getDOMImplementation();
    doc=domImpl.createDocument(SVG_NS,namespaceQualifier == null ? "svg" : namespaceQualifier + ":" + "svg",null);
    Element docElement=doc.getDocumentElement();
    docElement.setAttributeNS(XMLNS_NS,"xmlns:" + XLINK_Q,XLINK_NS);
    writeProcessingInstructions(doc,drawingNode);
    String commentText=createFileComment();
    if (commentText != null) {
      docElement.getParentNode().insertBefore(doc.createComment(commentText),docElement);
    }
    String linebreak="\n";
    idFactory.reset();
    initIdFactoryRecursively(drawingNode);
    Element defsElement=doc.createElement("defs");
    writeDefsRecursively(doc,defsElement,drawingNode);
    if (defsElement.getChildNodes().getLength() > 0) {
      docElement.appendChild(doc.createTextNode(linebreak));
      docElement.appendChild(defsElement);
      defsElement.appendChild(doc.createTextNode(linebreak));
      docElement.appendChild(doc.createTextNode(linebreak));
    }
    writeDocumentElementAttributes(docElement,drawingNode);
    writeNodeRecursively(doc,docElement,drawingNode,linebreak);
    docElement.appendChild(doc.createTextNode(linebreak));
    return doc;
  }
 catch (  ParserConfigurationException ex) {
    throw new IOException(ex);
  }
}
