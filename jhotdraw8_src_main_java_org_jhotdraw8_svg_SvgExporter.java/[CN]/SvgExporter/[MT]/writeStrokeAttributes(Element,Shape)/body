{
  Paint stroke=shape.getStroke();
  if (stroke != null) {
    String id=idFactory.getId(stroke);
    if (id != null) {
      elem.setAttribute("stroke","url(#" + id + ")");
    }
 else {
      elem.setAttribute("stroke",paint.toString(stroke));
      if (stroke instanceof Color) {
        Color c=(Color)stroke;
        if (!c.isOpaque()) {
          elem.setAttribute("stroke-opacity",nb.toString(c.getOpacity()));
        }
      }
    }
  }
  if (shape.getStrokeWidth() != 1) {
    elem.setAttribute("stroke-width",nb.toString(shape.getStrokeWidth()));
  }
  if (shape.getStrokeLineCap() != StrokeLineCap.BUTT) {
    elem.setAttribute("stroke-linecap",shape.getStrokeLineCap().toString().toLowerCase());
  }
  if (shape.getStrokeLineJoin() != StrokeLineJoin.MITER) {
    elem.setAttribute("stroke-linecap",shape.getStrokeLineJoin().toString().toLowerCase());
  }
  if (shape.getStrokeMiterLimit() != 4) {
    elem.setAttribute("stroke-miterlimit",nb.toString(shape.getStrokeMiterLimit()));
  }
  if (!shape.getStrokeDashArray().isEmpty()) {
    elem.setAttribute("stroke-dasharray",nbList.toStringFromCollection(shape.getStrokeDashArray()));
  }
  if (shape.getStrokeDashOffset() != 0) {
    elem.setAttribute("stroke-dashoffset",nb.toString(shape.getStrokeDashOffset()));
  }
  if (shape.getStrokeType() != StrokeType.CENTERED) {
switch (shape.getStrokeType()) {
case INSIDE:
      elem.setAttribute("stroke-alignment","inner");
    break;
case CENTERED:
  elem.setAttribute("stroke-alignment","center");
break;
case OUTSIDE:
elem.setAttribute("stroke-alignment","outer");
break;
default :
throw new InternalError("Unsupported stroke type " + shape.getStrokeType());
}
}
}
