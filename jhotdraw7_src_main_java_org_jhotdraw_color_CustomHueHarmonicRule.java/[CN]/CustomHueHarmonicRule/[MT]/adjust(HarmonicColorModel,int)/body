{
  float oldValue=constraint;
  CompositeColor bc=m.get(m.getBase());
  for (int i=0; i < indices.length; i++) {
    if (index == indices[i]) {
      float mo=((i % 2) + 1) / 2f;
      if (i >= indices.length / 2) {
        mo=-mo;
      }
      CompositeColor cc=m.get(index);
      if (bc.getComponent(0) < cc.getComponent(0)) {
        constraint=bc.getComponent(0) - cc.getComponent(0);
      }
 else {
        constraint=bc.getComponent(0) - 1 - cc.getComponent(0);
      }
      constraint/=mo;
      if (constraint > 1f) {
        constraint-=Math.floor(constraint);
      }
      if (constraint < 0f) {
        constraint=-constraint;
      }
      if (i > 1) {
        constraint=1f - constraint;
      }
      break;
    }
  }
  for (int i=0; i < indices.length; i++) {
    CompositeColor cc=m.get(indices[i]);
    float mo=((i % 2) + 1) / 2f;
    if (i >= indices.length / 2) {
      mo=-mo;
    }
    m.set(indices[i],new CompositeColor(m.getColorSystem(),bc.getComponent(0) + constraint * mo,cc.getComponent(1),cc.getComponent(2)));
  }
}
