{
  if (minDistance == 0) {
    return removeCoincidentPoints(digitizedPoints);
  }
 else {
    double squaredDistance=minDistance * minDistance;
    java.util.ArrayList<Point2D.Double> cleaned=new ArrayList<Point2D.Double>();
    if (digitizedPoints.size() > 0) {
      Point2D.Double prev=digitizedPoints.get(0);
      cleaned.add(prev);
      for (      Point2D.Double p : digitizedPoints) {
        if (v2SquaredDistanceBetween2Points(prev,p) > squaredDistance) {
          cleaned.add(p);
          prev=p;
        }
      }
      if (!prev.equals(digitizedPoints.get(digitizedPoints.size() - 1))) {
        cleaned.set(cleaned.size() - 1,digitizedPoints.get(digitizedPoints.size() - 1));
      }
    }
    return cleaned;
  }
}
