{
  double numerator, denominator;
  Point2D[] Q1=new Point2D[3], Q2=new Point2D[2];
  Point2D Q_u, Q1_u, Q2_u;
  double uPrime;
  int i;
  Q_u=bezierII(3,Q,u);
  for (i=0; i <= 2; i++) {
    Q1[i]=new Point2D((Q[i + 1].getX() - Q[i].getX()) * 3.0,(Q[i + 1].getY() - Q[i].getY()) * 3.0);
  }
  for (i=0; i <= 1; i++) {
    Q2[i]=new Point2D((Q1[i + 1].getX() - Q1[i].getX()) * 2.0,(Q1[i + 1].getY() - Q1[i].getY()) * 2.0);
  }
  Q1_u=bezierII(2,Q1,u);
  Q2_u=bezierII(1,Q2,u);
  numerator=(Q_u.getX() - P.getX()) * (Q1_u.getX()) + (Q_u.getY() - P.getY()) * (Q1_u.getY());
  denominator=(Q1_u.getX()) * (Q1_u.getX()) + (Q1_u.getY()) * (Q1_u.getY()) + (Q_u.getX() - P.getX()) * (Q2_u.getX()) + (Q_u.getY() - P.getY()) * (Q2_u.getY());
  uPrime=u - (numerator / denominator);
  return (uPrime);
}
