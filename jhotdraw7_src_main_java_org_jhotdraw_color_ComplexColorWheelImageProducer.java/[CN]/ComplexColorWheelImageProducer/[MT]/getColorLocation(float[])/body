{
  float radius=getRadius();
  Point2D.Float center=getCenter();
  float radial=(components[radialIndex] - colorSpace.getMinValue(radialIndex)) / (colorSpace.getMaxValue(radialIndex) - colorSpace.getMinValue(radialIndex)) * 2 - 1;
  float angular=(components[angularIndex] - colorSpace.getMinValue(angularIndex)) / (colorSpace.getMaxValue(angularIndex) - colorSpace.getMinValue(angularIndex)) * 2 - 1;
  if (flipX) {
    radial=-radial;
  }
  if (flipY) {
    angular=-angular;
  }
  radial=max(-1,min(radial,1));
  angular=max(-1,min(angular,1));
  double a=atan2(radial,angular);
  double sina=sin(a);
  double cosa=cos(a);
  double d=max(abs(sina),abs(cosa));
  double dx=(abs(sina) > abs(cosa)) ? sina : cosa;
  double bx=(abs(sina) > abs(cosa)) ? radial : angular;
  double r;
  if (d == 1 && dx != 0) {
    r=bx / dx;
  }
 else {
    r=(d * dx - sqrt(d * dx * (-4 * bx * d + 4 * bx + d * dx))) / (2 * (d - 1) * dx);
    if (r < 0) {
      r=(d * dx + sqrt(d * dx * (-4 * bx * d + 4 * bx + d * dx))) / (2 * (d - 1) * dx);
    }
  }
  Point p=new Point((int)(r * sina * radius + center.x),(int)(r * cosa * radius + center.y));
  return p;
}
