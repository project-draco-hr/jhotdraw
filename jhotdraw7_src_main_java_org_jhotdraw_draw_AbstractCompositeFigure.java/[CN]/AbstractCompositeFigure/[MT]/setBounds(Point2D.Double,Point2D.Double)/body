{
  Rectangle2D.Double oldBounds=getBounds();
  Rectangle2D.Double newBounds=new Rectangle2D.Double(Math.min(anchor.x,lead.x),Math.min(anchor.y,lead.y),Math.abs(anchor.x - lead.x),Math.abs(anchor.y - lead.y));
  double sx=newBounds.width / oldBounds.width;
  double sy=newBounds.height / oldBounds.height;
  AffineTransform tx=new AffineTransform();
  tx.translate(-oldBounds.x,-oldBounds.y);
  if (!Double.isNaN(sx) && !Double.isNaN(sy) && (sx != 1d || sy != 1d)&& !(sx < 0.0001)&& !(sy < 0.0001)) {
    transform(tx);
    tx.setToIdentity();
    tx.scale(sx,sy);
    transform(tx);
    tx.setToIdentity();
  }
  tx.translate(newBounds.x,newBounds.y);
  transform(tx);
}
