{
  final int prevSegment=(segment - 1 + nodes.size()) % nodes.size();
  final int nextSegment=(segment + 1) % nodes.size();
  BezierNode prev=nodes.get(prevSegment);
  BezierNode middle=nodes.get(segment);
  BezierNode next=nodes.get(nextSegment);
  boolean pc2=prev.isC2();
  boolean mc2=middle.isC2();
  boolean mc1=middle.isC1();
  boolean nc1=next.isC1();
  if (!pc2 && mc1 && nc1) {
    @Nullable javafx.geometry.Point2D p=Beziers.mergeQuadCurve(prev.getX0(),prev.getY0(),middle.getX1(),middle.getY1(),middle.getX0(),middle.getY0(),next.getX1(),next.getY1(),next.getX0(),next.getY0(),tolerance);
    if (p != null) {
      nodes.set(nextSegment,next.setX1(p.getX()).setY1(p.getY()));
    }
  }
 else   if (pc2 && mc2 && !nc1) {
    @Nullable javafx.geometry.Point2D p=Beziers.mergeQuadCurve(prev.getX0(),prev.getY0(),prev.getX2(),prev.getY2(),middle.getX0(),middle.getY0(),middle.getX2(),middle.getY2(),next.getX0(),next.getY0(),tolerance);
    if (p != null) {
      nodes.set(prevSegment,prev.setX2(p.getX()).setY2(p.getY()));
    }
  }
 else   if (pc2 && mc1 && mc2&& nc1) {
    @Nullable javafx.geometry.Point2D[] p=Beziers.mergeCubicCurve(prev.getX0(),prev.getY0(),prev.getX2(),prev.getY2(),middle.getX1(),middle.getY1(),middle.getX0(),middle.getY0(),middle.getX2(),middle.getY2(),next.getX1(),next.getY1(),next.getX0(),next.getY0(),tolerance);
    if (p != null) {
      javafx.geometry.Point2D p1=p[0];
      javafx.geometry.Point2D p2=p[1];
      nodes.set(prevSegment,prev.setX2(p1.getX()).setY2(p1.getY()));
      nodes.set(nextSegment,next.setX1(p2.getX()).setY1(p2.getY()));
    }
  }
  nodes.remove(segment);
}
