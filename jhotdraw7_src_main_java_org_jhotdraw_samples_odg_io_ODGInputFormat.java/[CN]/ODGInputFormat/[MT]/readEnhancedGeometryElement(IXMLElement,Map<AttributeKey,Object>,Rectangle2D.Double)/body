{
  String type=elem.getAttribute("type",DRAWING_NAMESPACE,"non-primitive");
  EnhancedPath path;
  if (elem.hasAttribute("enhanced-path",DRAWING_NAMESPACE)) {
    path=toEnhancedPath(elem.getAttribute("enhanced-path",DRAWING_NAMESPACE,null));
  }
 else {
    path=null;
  }
  String[] viewBoxValues=toWSOrCommaSeparatedArray(elem.getAttribute("viewBox",DRAWING_NAMESPACE,"0 0 100 100"));
  Rectangle2D.Double viewBox=new Rectangle2D.Double(toNumber(viewBoxValues[0]),toNumber(viewBoxValues[1]),toNumber(viewBoxValues[2]),toNumber(viewBoxValues[3]));
  AffineTransform viewTx=new AffineTransform();
  if (!viewBox.isEmpty()) {
    viewTx.scale(figureBounds.width / viewBox.width,figureBounds.height / viewBox.height);
    viewTx.translate(figureBounds.x - viewBox.x,figureBounds.y - viewBox.y);
  }
  boolean mirrorVertical=elem.getAttribute("mirror-vertical",DRAWING_NAMESPACE,"false").equals("true");
  boolean mirrorHorizontal=elem.getAttribute("mirror-horizontal",DRAWING_NAMESPACE,"false").equals("true");
  ODGFigure figure;
  if (type.equals("rectangle")) {
    figure=createEnhancedGeometryRectangleFigure(figureBounds,a);
  }
 else   if (type.equals("ellipse")) {
    figure=createEnhancedGeometryEllipseFigure(figureBounds,a);
  }
 else {
    System.out.println("ODGInputFormat.readEnhancedGeometryElement not implemented for " + elem);
    figure=null;
  }
  return figure;
}
