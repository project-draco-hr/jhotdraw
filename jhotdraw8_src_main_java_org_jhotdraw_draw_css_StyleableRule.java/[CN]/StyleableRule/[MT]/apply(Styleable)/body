{
  List<CssMetaData<? extends Styleable,?>> list=elem.getCssMetaData();
  HashMap<String,CssMetaData<? extends Styleable,?>> map=new HashMap<>();
  for (  CssMetaData<? extends Styleable,?> meta : list) {
    map.put(meta.getProperty(),meta);
  }
  for (  Map.Entry<String,PropertyValue> entry : properties.entrySet()) {
    CssMetaData<Styleable,Object> meta=(CssMetaData<Styleable,Object>)map.get(entry.getKey());
    if (meta != null && meta.isSettable(elem)) {
      StyleableProperty styleableProperty=meta.getStyleableProperty(elem);
      PropertyValue pv=entry.getValue();
      if (pv.convertedValue == null) {
        StyleConverter<String,Object> converter=(StyleConverter<String,Object>)meta.getConverter();
        ParsedValueImpl<String,Object> parsedValue=new ParsedValueImpl<>(pv.unparsedValue,null);
        pv.convertedValue=converter.convert(parsedValue,null);
      }
      styleableProperty.applyStyle(StyleOrigin.AUTHOR,pv.convertedValue);
    }
  }
}
