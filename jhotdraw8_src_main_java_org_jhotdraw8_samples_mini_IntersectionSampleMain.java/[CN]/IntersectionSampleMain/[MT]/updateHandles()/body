{
  for (  Handle h : handles) {
    h.updateHandle.run();
  }
  final ObservableList<PathElement> elems=isectPath.getElements();
  elems.clear();
  if (shapes.size() == 2) {
    Shape shape0=shapes.get(0);
    Shape shape1=shapes.get(1);
    Intersection isect=null;
    if (shape0 instanceof CubicCurve && shape1 instanceof CubicCurve) {
      CubicCurve l0=(CubicCurve)shape0;
      CubicCurve l1=(CubicCurve)shape1;
      isect=Intersections.intersectBezier3Bezier3(l0.getStartX(),l0.getStartY(),l0.getControlX1(),l0.getControlY1(),l0.getControlX2(),l0.getControlY2(),l0.getEndX(),l0.getEndY(),l1.getStartX(),l1.getStartY(),l1.getControlX1(),l1.getControlY1(),l1.getControlX2(),l1.getControlY2(),l1.getEndX(),l1.getEndY());
      System.out.println("cubiccurve0:" + l0.getStartX() + " "+ l0.getStartY()+ " "+ l0.getControlX1()+ " "+ l0.getControlY1()+ " "+ l0.getControlX2()+ " "+ l0.getControlY2()+ " "+ l0.getEndX()+ " "+ l0.getEndY());
      System.out.println("cubiccurve1:" + l1.getStartX() + " "+ l1.getStartY()+ " "+ l1.getControlX1()+ " "+ l1.getControlY1()+ " "+ l1.getControlX2()+ " "+ l1.getControlY2()+ " "+ l1.getEndX()+ " "+ l1.getEndY());
    }
 else     if (shape0 instanceof Ellipse && shape1 instanceof Ellipse) {
      Ellipse e0=(Ellipse)shape0;
      Ellipse e1=(Ellipse)shape1;
      isect=Intersections.intersectEllipseEllipse(e0.getCenterX(),e0.getCenterY(),e0.getRadiusX(),e0.getRadiusY(),e1.getCenterX(),e1.getCenterY(),e1.getRadiusX(),e1.getRadiusY());
      System.out.println("ellipse0:" + e0.getCenterX() + " "+ e0.getCenterY()+ " "+ e0.getRadiusX()+ " "+ e0.getRadiusY());
      System.out.println("ellipse1:" + e1.getCenterX() + " "+ e1.getCenterY()+ " "+ e1.getRadiusX()+ " "+ e1.getRadiusY());
    }
 else     if (shape0 instanceof Ellipse && shape1 instanceof Line) {
      Ellipse e0=(Ellipse)shape0;
      Line l1=(Line)shape1;
      isect=Intersections.intersectEllipseLine(e0.getCenterX(),e0.getCenterY(),e0.getRadiusX(),e0.getRadiusY(),l1.getStartX(),l1.getStartY(),l1.getEndX(),l1.getEndY());
      System.out.println("ellipse0:" + e0.getCenterX() + " "+ e0.getCenterY()+ " "+ e0.getRadiusX()+ " "+ e0.getRadiusY());
      System.out.println("line1:" + l1.getStartX() + " "+ l1.getStartY()+ " "+ l1.getEndX()+ " "+ l1.getEndY());
    }
 else     if (shape0 instanceof Ellipse && shape1 instanceof QuadCurve) {
      Ellipse e0=(Ellipse)shape0;
      QuadCurve l1=(QuadCurve)shape0;
      isect=Intersections.intersectEllipseBezier2(e0.getCenterX(),e0.getCenterY(),e0.getRadiusX(),e0.getRadiusY(),l1.getStartX(),l1.getStartY(),l1.getControlX(),l1.getControlY(),l1.getEndX(),l1.getEndY());
      System.out.println("ellipse0:" + e0.getCenterX() + " "+ e0.getCenterY()+ " "+ e0.getRadiusX()+ " "+ e0.getRadiusY());
      System.out.println("quardcurve1:" + l1.getStartX() + " "+ l1.getStartY()+ " "+ l1.getControlX()+ " "+ l1.getControlY()+ " "+ l1.getEndX()+ " "+ l1.getEndY());
    }
 else     if (shape0 instanceof Line && shape1 instanceof Ellipse) {
      Line l0=(Line)shape0;
      Ellipse e1=(Ellipse)shape1;
      isect=Intersections.intersectLineEllipse(l0.getStartX(),l0.getStartY(),l0.getEndX(),l0.getEndY(),e1.getCenterX(),e1.getCenterY(),e1.getRadiusX(),e1.getRadiusY());
      System.out.println("line0:" + l0.getStartX() + " "+ l0.getStartY()+ " "+ l0.getEndX()+ " "+ l0.getEndY());
      System.out.println("ellipse1:" + e1.getCenterX() + " "+ e1.getCenterY()+ " "+ e1.getRadiusX()+ " "+ e1.getRadiusY());
    }
 else     if (shape0 instanceof Line && shape1 instanceof Line) {
      Line l0=(Line)shape0;
      Line l1=(Line)shape1;
      isect=Intersections.intersectLineLine(l0.getStartX(),l0.getStartY(),l0.getEndX(),l0.getEndY(),l1.getStartX(),l1.getStartY(),l1.getEndX(),l1.getEndY());
      System.out.println("line0:" + l0.getStartX() + " "+ l0.getStartY()+ " "+ l0.getEndX()+ " "+ l0.getEndY());
      System.out.println("line1:" + l1.getStartX() + " "+ l1.getStartY()+ " "+ l1.getEndX()+ " "+ l1.getEndY());
    }
 else     if (shape0 instanceof QuadCurve && shape1 instanceof QuadCurve) {
      QuadCurve l0=(QuadCurve)shape0;
      QuadCurve l1=(QuadCurve)shape1;
      isect=Intersections.intersectBezier2Bezier2(l0.getStartX(),l0.getStartY(),l0.getControlX(),l0.getControlY(),l0.getEndX(),l0.getEndY(),l1.getStartX(),l1.getStartY(),l1.getControlX(),l1.getControlY(),l1.getEndX(),l1.getEndY());
      System.out.println("quadcurve0:" + l0.getStartX() + " "+ l0.getStartY()+ " "+ l0.getControlX()+ " "+ l0.getControlY()+ " "+ l0.getEndX()+ " "+ l0.getEndY());
      System.out.println("quardcurve1:" + l1.getStartX() + " "+ l1.getStartY()+ " "+ l1.getControlX()+ " "+ l1.getControlY()+ " "+ l1.getEndX()+ " "+ l1.getEndY());
    }
 else     if (shape0 instanceof QuadCurve && shape1 instanceof Ellipse) {
      QuadCurve l0=(QuadCurve)shape0;
      Ellipse e1=(Ellipse)shape1;
      isect=Intersections.intersectBezier2Ellipse(l0.getStartX(),l0.getStartY(),l0.getControlX(),l0.getControlY(),l0.getEndX(),l0.getEndY(),e1.getCenterX(),e1.getCenterY(),e1.getRadiusX(),e1.getRadiusY());
      System.out.println("quadcurve0:" + l0.getStartX() + " "+ l0.getStartY()+ " "+ l0.getControlX()+ " "+ l0.getControlY()+ " "+ l0.getEndX()+ " "+ l0.getEndY());
      System.out.println("ellipse1:" + e1.getCenterX() + " "+ e1.getCenterY()+ " "+ e1.getRadiusX()+ " "+ e1.getRadiusY());
    }
    if (isect != null) {
      double r=3.5;
      for (      Map.Entry<Double,Point2D> entry : isect.getIntersections()) {
        Point2D p=entry.getValue();
        System.out.println("  p:" + p);
        double x=p.getX();
        double y=p.getY();
        elems.add(new MoveTo(x - r,y));
        elems.add(new ArcTo(r,r,0,x + r,y,true,true));
        elems.add(new ArcTo(r,r,0,x - r,y,true,true));
        elems.add(new ClosePath());
      }
    }
  }
}
