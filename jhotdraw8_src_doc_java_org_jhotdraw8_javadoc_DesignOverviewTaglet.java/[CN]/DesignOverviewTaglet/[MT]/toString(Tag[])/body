{
  if (tags.length == 0) {
    return "";
  }
  Tag tag=tags[0];
  if (!(tag.holder() instanceof RootDoc)) {
    System.err.println(tag.position() + ": error: DesignOverviewTaglet is not in root document.");
    return "";
  }
  TreeMap<String,DesignPatternSummary> map=new TreeMap<>();
  RootDoc root=(RootDoc)tag.holder();
  for (  ClassDoc classDoc : root.classes()) {
    for (    Tag dpTag : classDoc.tags(DesignPatternTaglet.NAME)) {
      Tag[] parsedInlineTags=DesignPatternTaglet.parseInlineTags(dpTag);
      if (parsedInlineTags.length > 0 && (parsedInlineTags[0] instanceof DesignPatternTaglet.DesignPatternHeaderTag)) {
        DesignPatternTaglet.DesignPatternHeaderTag dph=(DesignPatternTaglet.DesignPatternHeaderTag)parsedInlineTags[0];
        String key=dph.getPatternName() + " " + dph.getInstantiatingType();
        DesignPatternSummary summary=map.get(key);
        if (summary == null) {
          summary=new DesignPatternSummary();
          map.put(key,summary);
          summary.header=dph;
          summary.description=parsedInlineTags;
        }
        if (parsedInlineTags.length > summary.description.length) {
          summary.description=parsedInlineTags;
        }
        summary.participants.add(new ParticipationSummary(classDoc,dph.getPatternRole()));
      }
    }
  }
  StringBuilder result=new StringBuilder();
  result.append("<table class=\"overviewSummary\" " + "summary=\"Design Patterns table, listing design patterns, " + "and participating types\" "+ "border=\"0\" cellpadding=\"3\" cellspacing=\"0\">\n"+ "\n"+ "<tbody><tr>\n"+ "<th class=\"colFirst\" scope=\"col\">Design Pattern</th>\n"+ "<th class=\"colLast\" scope=\"col\">Description and "+ "Participating Types</th>\n"+ "</tr>\n"+ "</tbody><tbody>\n");
  boolean alt=false;
  for (  Map.Entry<String,DesignPatternSummary> entry : map.entrySet()) {
    DesignPatternSummary summary=entry.getValue();
    alt=!alt;
    result.append(alt ? "<tr class=\"altColor\">\n" : "<tr class=\"rowColor\">\n");
    result.append("<td class=\"colFirst\">");
    result.append(summary.header.getPatternName());
    result.append("</td>\n");
    result.append("<td class=\"colLast\">");
    result.append("<div class=\"block\">");
    for (    Tag descr : summary.description) {
      if (descr instanceof DesignPatternTaglet.DesignPatternHeaderTag) {
      }
 else       if (descr instanceof SeeTag) {
        SeeTag see=(SeeTag)descr;
        result.append(see.label().isEmpty() ? DesignPatternTaglet.toUnqualifiedName(see.referencedClassName()) : see.label());
      }
 else {
        String text=descr.text();
        int p=(text.replaceAll("\\s"," ") + " ").indexOf(". ");
        if (p != -1) {
          text=text.substring(0,p + 1);
        }
        result.append(text);
        if (p != -1) {
          break;
        }
      }
    }
    result.append("</div>");
    result.append("<div class=\"block\">");
    boolean first=true;
    String previousRole="";
    Collections.sort(summary.participants);
    for (    ParticipationSummary ps : summary.participants) {
      if (first) {
        first=false;
      }
 else {
        result.append(", ");
      }
      if (!ps.role.equals(previousRole)) {
        result.append(ps.role).append(": ");
      }
      result.append("<a href=\"");
      result.append(ps.classDoc.qualifiedTypeName().replace('.','/'));
      result.append(".html\">");
      result.append(ps.classDoc.simpleTypeName());
      result.append("</a>");
      previousRole=ps.role;
    }
    result.append("</div>");
    result.append("</td>\n");
    result.append("</tr>\n");
  }
  result.append("</tbody>\n" + "<caption><span>Design Patterns</span><span class=\"tabEnd\">&nbsp;</span></caption></table>");
  return result.toString();
}
