{
  if (value instanceof DropShadow) {
    DropShadow fx=(DropShadow)value;
    out.append(DROP_SHADOW).append('(');
    out.append(fx.getBlurType().toString().toLowerCase().replace('_','-'));
    out.append(',');
    colorConverter.toString(out,idFactory,new CssColor(fx.getColor()));
    out.append(',');
    nb.toString(out,idFactory,fx.getRadius());
    out.append(',');
    nb.toString(out,idFactory,fx.getSpread() * 100.0);
    out.append("%,");
    nb.toString(out,idFactory,fx.getOffsetX());
    out.append(',');
    nb.toString(out,idFactory,fx.getOffsetY());
    out.append(')');
    if (fx.getInput() != null) {
      out.append(", ");
      toString(out,idFactory,fx.getInput());
    }
  }
 else   if (value instanceof InnerShadow) {
    InnerShadow fx=(InnerShadow)value;
    out.append(INNER_SHADOW).append('(');
    out.append(fx.getBlurType().toString().toLowerCase().replace('_','-'));
    out.append(',');
    colorConverter.toString(out,idFactory,new CssColor(fx.getColor()));
    out.append(',');
    nb.toString(out,idFactory,fx.getRadius());
    out.append(',');
    nb.toString(out,idFactory,fx.getChoke() * 100.0);
    out.append("%,");
    nb.toString(out,idFactory,fx.getOffsetX());
    out.append(',');
    nb.toString(out,idFactory,fx.getOffsetY());
    out.append(')');
    if (fx.getInput() != null) {
      out.append(", ");
      toString(out,idFactory,fx.getInput());
    }
  }
 else {
    out.append("none");
  }
}
