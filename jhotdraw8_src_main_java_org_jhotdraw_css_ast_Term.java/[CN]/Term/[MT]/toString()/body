{
  if (ttype >= 0) {
    return stringValue;
  }
switch (ttype) {
case CssTokenizer.TT_IDENT:
    return fromIDENT();
case CssTokenizer.TT_AT_KEYWORD:
  return "@" + fromIDENT();
case CssTokenizer.TT_STRING:
return fromSTRING();
case CssTokenizer.TT_HASH:
return "#" + fromIDENT();
case CssTokenizer.TT_NUMBER:
return fromNUMBER();
case CssTokenizer.TT_PERCENTAGE:
return fromNUMBER() + "%";
case CssTokenizer.TT_DIMENSION:
return fromNUMBER() + fromIDENT();
case CssTokenizer.TT_URI:
return fromURI();
case CssTokenizer.TT_UNICODE_RANGE:
return fromUNICODE_RANGE();
case CssTokenizer.TT_S:
return fromS();
case CssTokenizer.TT_FUNCTION:
return fromIDENT() + "(";
case CssTokenizer.TT_INCLUDE_MATCH:
return fromINCLUDE_MATCH();
case CssTokenizer.TT_DASH_MATCH:
return fromDASH_MATCH();
case CssTokenizer.TT_PREFIX_MATCH:
return fromPREFIX_MATCH();
case CssTokenizer.TT_SUFFIX_MATCH:
return fromSUFFIX_MATCH();
case CssTokenizer.TT_SUBSTRING_MATCH:
return fromSUBSTRING_MATCH();
case CssTokenizer.TT_COLUMN:
return fromCOLUMN();
}
throw new InternalError("Unsupported TTYPE:" + ttype);
}
