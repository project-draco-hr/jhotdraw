{
  String value=resource.getString(key);
  for (int p1=value.indexOf("${"); p1 != -1; p1=value.indexOf("${")) {
    int p2=value.indexOf('}',p1 + 2);
    if (p2 == -1) {
      break;
    }
    String placeholderKey=value.substring(p1 + 2,p2);
    String placeholderFormat;
    int p3=placeholderKey.indexOf(',');
    if (p3 != -1) {
      placeholderFormat=placeholderKey.substring(p3 + 1);
      placeholderKey=placeholderKey.substring(0,p3);
    }
 else {
      placeholderFormat="string";
    }
    ArrayList<String> fallbackKeys=new ArrayList<String>();
    generateFallbackKeys(placeholderKey,fallbackKeys);
    String placeholderValue=null;
    for (    String fk : fallbackKeys) {
      try {
        placeholderValue=getStringRecursive(fk);
        break;
      }
 catch (      MissingResourceException e) {
      }
    }
    if (placeholderValue == null) {
      throw new MissingResourceException("Placeholder value for fallback keys \"" + fallbackKeys + "\" in key \""+ key+ "\" not found in "+ baseName,baseName,key);
    }
    if ("accelerator".equals(placeholderFormat)) {
      StringBuilder b=new StringBuilder();
      for (      String s : placeholderValue.split(" ")) {
        if (acceleratorKeys.contains(s)) {
          b.append(getString("accelerator." + s));
        }
 else {
          b.append(s);
        }
      }
      placeholderValue=b.toString();
    }
    value=value.substring(0,p1) + placeholderValue + value.substring(p2 + 1);
  }
  return value;
}
