{
  textAreaValid=true;
  if (drawingView == null || drawingView.getDrawing() == null) {
    textArea.setText("");
    return;
  }
  Drawing drawing=drawingView.getDrawing();
  Set<Figure> newValue=drawingView.getSelectedFigures();
  if (newValue.isEmpty()) {
    newValue=new LinkedHashSet<Figure>();
    newValue.add(drawing);
  }
  StyleManager<Figure> styleManager=drawing.getStyleManager();
  SelectorModel<Figure> selectorModel=styleManager.getSelectorModel();
  String id=null;
  String type=null;
  Set<String> styleClasses=new TreeSet<>();
  Map<String,String> attr=new TreeMap<>();
  Map<String,String> description=new TreeMap<>();
  boolean first=true;
  for (  Figure f : newValue) {
    selectorModel.getAttributeNames(f);
    if (first) {
      first=false;
      id=selectorModel.getId(f);
      type=selectorModel.getType(f);
      styleClasses.addAll(selectorModel.getStyleClasses(f));
      for (      String name : selectorModel.getAttributeNames(f)) {
        attr.put(name,selectorModel.getAttributeValue(f,name));
      }
    }
 else {
      attr.keySet().retainAll(selectorModel.getAttributeNames(f));
      id=null;
      type=selectorModel.getType(f).equals(type) ? type : null;
      styleClasses.retainAll(selectorModel.getStyleClasses(f));
      for (      String name : attr.keySet()) {
        String oldAttrValue=attr.get(name);
        if (oldAttrValue != null) {
          String newAttrValue=selectorModel.getAttributeValue(f,name);
          if (!oldAttrValue.equals(newAttrValue)) {
            attr.put(name,"/* multiple values */");
          }
        }
      }
    }
  }
  StringBuilder buf=new StringBuilder();
  if (type != null) {
    buf.append(cssIdentConverter.toString(type));
  }
  if (id != null) {
    buf.append('#').append(cssIdentConverter.toString(id));
  }
  for (  String clazz : styleClasses) {
    buf.append('.').append(cssIdentConverter.toString(clazz));
  }
  buf.append(":selected {");
  for (  Map.Entry<String,String> a : attr.entrySet()) {
    buf.append("\n  ").append(a.getKey()).append(": ");
    buf.append(a.getValue());
    buf.append(";");
  }
  buf.append("\n}");
  try {
    Method m=Node.class.getDeclaredMethod("impl_markDirty",DirtyBits.class);
    m.setAccessible(true);
    for (Parent p=textArea; p != null; p=p.getParent()) {
      m.invoke(p,DirtyBits.NODE_CONTENTS);
    }
  }
 catch (  Exception e) {
    System.out.println("StylesAttributesInspector e:" + e);
  }
  textArea.setText(buf.toString());
}
