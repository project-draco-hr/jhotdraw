{
  RoundRectangleFigure owner=(RoundRectangleFigure)getOwner();
  Point2D.Double oldArc=new Point2D.Double(owner.getArcWidth(),owner.getArcHeight());
  Point2D.Double newArc=new Point2D.Double(owner.getArcWidth(),owner.getArcHeight());
switch (evt.getKeyCode()) {
case KeyEvent.VK_UP:
    if (newArc.y > 0) {
      newArc.y=Math.max(0,newArc.y - 1);
    }
  evt.consume();
break;
case KeyEvent.VK_DOWN:
newArc.y+=1;
evt.consume();
break;
case KeyEvent.VK_LEFT:
if (newArc.x > 0) {
newArc.x=Math.max(0,newArc.x - 1);
}
evt.consume();
break;
case KeyEvent.VK_RIGHT:
newArc.x+=1;
evt.consume();
break;
}
if (!newArc.equals(oldArc)) {
owner.willChange();
owner.setArcWidth(newArc.x);
owner.setArcHeight(newArc.y);
owner.changed();
ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.draw.Labels");
CompositeEdit edit=new CompositeEdit(labels.getString("attribute.roundRectRadius"));
fireUndoableEditHappened(edit);
fireUndoableEditHappened(new PropertyChangeEdit(owner,RoundRectangleFigure.ARC_WIDTH_PROPERTY,oldArc.x,newArc.x));
fireUndoableEditHappened(new PropertyChangeEdit(owner,RoundRectangleFigure.ARC_HEIGHT_PROPERTY,oldArc.y,newArc.y));
fireUndoableEditHappened(edit);
}
}
