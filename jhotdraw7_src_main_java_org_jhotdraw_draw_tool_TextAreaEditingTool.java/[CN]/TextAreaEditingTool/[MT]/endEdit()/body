{
  if (typingTarget != null) {
    typingTarget.willChange();
    final TextHolderFigure editedFigure=typingTarget;
    final String oldText=typingTarget.getText();
    final String newText=textArea.getText();
    typingTarget.willChange();
    if (newText.length() > 0) {
      typingTarget.setText(newText);
    }
 else {
      typingTarget.setText("");
    }
    typingTarget.changed();
    UndoableEdit edit=new AbstractUndoableEdit(){
      private static final long serialVersionUID=1L;
      @Override public String getPresentationName(){
        ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.draw.Labels");
        return labels.getString("attribute.text.text");
      }
      @Override public void undo(){
        super.undo();
        editedFigure.willChange();
        editedFigure.setText(oldText);
        editedFigure.changed();
      }
      @Override public void redo(){
        super.redo();
        editedFigure.willChange();
        editedFigure.setText(newText);
        editedFigure.changed();
      }
    }
;
    getDrawing().fireUndoableEditHappened(edit);
    typingTarget.changed();
    typingTarget=null;
    textArea.endOverlay();
  }
}
