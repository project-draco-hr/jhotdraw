{
  float[] components=colorizer.getComponents();
  ColorSpace cs=colorizer.getColorSpace();
  int offset=trackBuffer / 2;
  float minv=cs.getMinValue(componentIndex);
  float maxv=cs.getMaxValue(componentIndex);
  for (int y=0, n=h - trackBuffer - 1; y <= n; y++) {
    components[componentIndex]=maxv - (y / (float)n) * (maxv - minv);
    pixels[(y + offset) * w]=ColorUtil.toRGB(cs,components);
  }
  for (int y=0; y < offset; y++) {
    pixels[y * w]=pixels[offset * w];
    pixels[(h - y - 1) * w]=pixels[(h - offset - 1) * w];
  }
  for (int x=1; x < w; x++) {
    for (int y=0, n=w * h; y < n; y+=w) {
      pixels[x + y]=pixels[x - 1 + y];
    }
  }
}
