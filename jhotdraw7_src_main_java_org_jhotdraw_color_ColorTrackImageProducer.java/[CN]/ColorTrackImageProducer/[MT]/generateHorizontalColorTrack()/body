{
  float[] components=colorizer.getComponents();
  ColorSpace cs=colorizer.getColorSpace();
  int offset=trackBuffer / 2;
  float minv=cs.getMinValue(componentIndex);
  float maxv=cs.getMaxValue(componentIndex);
  for (int x=0, n=w - trackBuffer - 1; x <= n; x++) {
    components[componentIndex]=(x / (float)n) * (maxv - minv) + minv;
    pixels[x + offset]=ColorUtil.toRGB(cs,components);
  }
  for (int x=0; x < offset; x++) {
    pixels[x]=pixels[offset];
    pixels[w - x - 1]=pixels[w - offset - 1];
  }
  for (int y=w, n=w * h; y < n; y+=w) {
    System.arraycopy(pixels,0,pixels,y,w);
  }
}
