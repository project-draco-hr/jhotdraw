{
  final ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.samples.svg.Labels");
  Container c=getContentPane();
  c.removeAll();
  final ProgressIndicator progress=new ProgressIndicator("JHotDraw",labels.getString("progressSaving"));
  c.add(progress);
  c.validate();
  new Worker(){
    public Object construct(){
      try {
        saveDrawing(drawingComponent.getDrawing(),progress);
        return null;
      }
 catch (      Throwable t) {
        return t;
      }
    }
    public void finished(    Object result){
      if (result instanceof ServerAuthenticationException) {
        if (showAuthenticationDialog() == JOptionPane.OK_OPTION) {
          save();
        }
 else {
          Container c=getContentPane();
          c.removeAll();
          c.add(drawingComponent.getComponent());
          c.validate();
          c.repaint();
        }
      }
 else       if (result instanceof Throwable) {
        Throwable error=((Throwable)result);
        error.printStackTrace();
        Container c=getContentPane();
        c.setLayout(new BorderLayout());
        c.removeAll();
        String message=error.getMessage() == null ? error.toString() : error.getMessage();
        MessagePanel mp=new MessagePanel(UIManager.getIcon("OptionPane.errorIcon"),labels.getFormatted("messageSaveFailed",htmlencode(getParameter("UploadURL")),htmlencode(message)));
        c.add(mp);
        mp.addActionListener(new ActionListener(){
          public void actionPerformed(          ActionEvent evt){
            if (evt.getActionCommand().equals("close")) {
              close();
            }
          }
        }
);
        c.validate();
      }
 else {
        close();
      }
    }
  }
.start();
}
