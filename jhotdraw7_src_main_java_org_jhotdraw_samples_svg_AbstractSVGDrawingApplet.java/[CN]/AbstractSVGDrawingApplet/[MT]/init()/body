{
  if (getParameter("Locale") != null) {
    Locale.setDefault(new Locale(getParameter("Locale")));
  }
  final ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.samples.svg.Labels");
  try {
    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
  }
 catch (  Throwable e) {
  }
  Container c=getContentPane();
  final ProgressIndicator progress=new ProgressIndicator(getName(),labels.getString("progressInitializing"));
  c.add(progress);
  progress.revalidate();
  new Worker(){
    public Object construct(){
      try {
        Thread t=new Thread(){
          public void run(){
            drawingComponent=createDrawingComponent();
          }
        }
;
        t.start();
        progress.setNote(labels.getString("progressLoading"));
        Object drawing=loadDrawing(progress);
        progress.setNote(labels.getString("progressOpeningEditor"));
        progress.setIndeterminate(true);
        t.join();
        return drawing;
      }
 catch (      Throwable t) {
        return t;
      }
    }
    public void finished(    Object result){
      Container c=getContentPane();
      c.setLayout(new BorderLayout());
      c.removeAll();
      if (result instanceof Throwable) {
        Throwable error=(Throwable)result;
        error.printStackTrace();
        String message=(error.getMessage() == null) ? error.toString() : error.getMessage();
        MessagePanel mp=new MessagePanel(UIManager.getIcon("OptionPane.errorIcon"),labels.getFormatted("messageLoadFailed",htmlencode(getParameter("DrawingURL")),htmlencode(message)));
        c.add(mp);
        mp.addActionListener(new ActionListener(){
          public void actionPerformed(          ActionEvent evt){
            if (evt.getActionCommand().equals("close")) {
              close();
            }
          }
        }
);
      }
 else {
        c.add(drawingComponent.getComponent());
        drawingComponent.addActionListener(new ActionListener(){
          public void actionPerformed(          ActionEvent evt){
            if (evt.getActionCommand().equals("save")) {
              save();
            }
 else             if (evt.getActionCommand().equals("cancel")) {
              cancel();
            }
          }
        }
);
        initComponents();
        if (result != null) {
          if (result instanceof Drawing) {
            setDrawing((Drawing)result);
          }
 else           if (result instanceof Throwable) {
            setDrawing(createDrawing());
            getDrawing().add(new SVGTextFigure(result.toString()));
            ((Throwable)result).printStackTrace();
          }
        }
      }
      c.validate();
      long end=System.currentTimeMillis();
      System.out.println("AbstractDrawingApplet startup latency:" + (end - start));
    }
  }
.start();
}
