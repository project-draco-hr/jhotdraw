{
  if (!p.isShowing()) {
    p.setShowing(true);
    final JInternalFrame f=new JInternalFrame();
    f.setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE);
    f.setClosable(true);
    f.setMaximizable(true);
    f.setResizable(true);
    f.setIconifiable(false);
    updateViewTitle(p,f);
    PreferencesUtil.installInternalFramePrefsHandler(prefs,"view",f,desktopPane);
    Point loc=f.getLocation();
    boolean moved;
    do {
      moved=false;
      for (Iterator i=views().iterator(); i.hasNext(); ) {
        View aView=(View)i.next();
        if (aView != p && aView.isShowing() && SwingUtilities.getRootPane(aView.getComponent()).getParent().getLocation().equals(loc)) {
          loc.x+=22;
          loc.y+=22;
          moved=true;
          break;
        }
      }
    }
 while (moved);
    f.setLocation(loc);
    f.addInternalFrameListener(new InternalFrameAdapter(){
      @Override public void internalFrameClosing(      final InternalFrameEvent evt){
        getModel().getAction(CloseAction.ID).actionPerformed(new ActionEvent(f,ActionEvent.ACTION_PERFORMED,"windowClosing"));
      }
      @Override public void internalFrameClosed(      final InternalFrameEvent evt){
        if (p == getActiveView()) {
          setActiveView(null);
        }
        p.stop();
      }
    }
);
    p.addPropertyChangeListener(new PropertyChangeListener(){
      public void propertyChange(      PropertyChangeEvent evt){
        String name=evt.getPropertyName();
        if (name == View.HAS_UNSAVED_CHANGES_PROPERTY || name == View.FILE_PROPERTY) {
          updateViewTitle(p,f);
        }
      }
    }
);
    f.addPropertyChangeListener(new PropertyChangeListener(){
      public void propertyChange(      PropertyChangeEvent evt){
        String name=evt.getPropertyName();
        if (name.equals("selected")) {
          if (evt.getNewValue().equals(Boolean.TRUE)) {
            setActiveView(p);
          }
        }
      }
    }
);
    f.getContentPane().add(p.getComponent());
    f.setVisible(true);
    desktopPane.add(f);
    f.toFront();
    try {
      f.setSelected(true);
    }
 catch (    PropertyVetoException e) {
    }
    p.getComponent().requestFocusInWindow();
    p.start();
  }
}
