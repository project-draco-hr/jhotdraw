{
  Method setter=pd.getWriteMethod();
  Class type=pd.getPropertyType();
  if ((setter != null) && (type != null) && containsKey(key)) {
    Object value=getObject(key,type);
    String propertyName=pd.getName();
    try {
      if ("text".equals(propertyName) && (component instanceof AbstractButton)) {
        MnemonicText.configure(component,(String)value);
      }
 else       if ("text".equals(propertyName) && (component instanceof JLabel)) {
        MnemonicText.configure(component,(String)value);
      }
 else {
        setter.invoke(component,value);
      }
    }
 catch (    Exception e) {
      String pdn=pd.getName();
      String msg="property setter failed";
      RuntimeException re=new PropertyInjectionException(msg,key,component,pdn);
      re.initCause(e);
      throw re;
    }
  }
 else   if (type != null) {
    String pdn=pd.getName();
    String msg="no value specified for resource";
    throw new PropertyInjectionException(msg,key,component,pdn);
  }
 else   if (setter == null) {
    String pdn=pd.getName();
    String msg="can't set read-only property";
    throw new PropertyInjectionException(msg,key,component,pdn);
  }
}
