{
  BezierFigure figure=getBezierFigure();
  Point2D.Double p=view.getConstrainer().constrainPoint(view.viewToDrawing(lead));
  BezierPath.Node v=figure.getNode(index);
  fireAreaInvalidated(v);
  figure.willChange();
  Figure tOwner=getTransformOwner();
  if (tOwner.get(TRANSFORM) != null) {
    try {
      tOwner.get(TRANSFORM).inverseTransform(p,p);
    }
 catch (    NoninvertibleTransformException ex) {
      ex.printStackTrace();
    }
  }
  if (!v.keepColinear) {
    figure.setPoint(index,controlPointIndex,p);
  }
 else {
    double a=Math.PI + Math.atan2(p.y - v.y[0],p.x - v.x[0]);
    int c2=(controlPointIndex == 1) ? 2 : 1;
    double r=Math.sqrt((v.x[c2] - v.x[0]) * (v.x[c2] - v.x[0]) + (v.y[c2] - v.y[0]) * (v.y[c2] - v.y[0]));
    double sina=Math.sin(a);
    double cosa=Math.cos(a);
    Point2D.Double p2=new Point2D.Double(r * cosa + v.x[0],r * sina + v.y[0]);
    figure.setPoint(index,controlPointIndex,p);
    figure.setPoint(index,c2,p2);
  }
  figure.changed();
  fireAreaInvalidated(figure.getNode(index));
}
