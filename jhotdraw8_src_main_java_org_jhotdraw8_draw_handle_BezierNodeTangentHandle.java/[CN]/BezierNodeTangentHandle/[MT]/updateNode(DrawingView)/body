{
  Figure f=getOwner();
  Transform t=Transforms.concat(view.getWorldToView(),f.getLocalToWorld());
  ImmutableList<BezierNode> list=f.get(pointKey);
  if (pointIndex >= list.size()) {
    return;
  }
  BezierNode bn=getBezierNode();
  BezierNode prev=list.get((pointIndex + list.size() - 1) % list.size());
  BezierNode next=list.get((pointIndex + 1) % list.size());
  Point2D c0=Transforms.transform(t,bn.getC0());
  Point2D c1=Transforms.transform(t,bn.getC1());
  Point2D c2=Transforms.transform(t,bn.getC2());
  Polyline node=getNode();
  List<Double> points=node.getPoints();
  points.clear();
{
    if (bn.isC1()) {
      points.add(c1.getX());
      points.add(c1.getY());
      points.add(c0.getX());
      points.add(c0.getY());
    }
 else     if (prev.isC2()) {
      c1=Transforms.transform(t,prev.getC2());
      points.add(c1.getX());
      points.add(c1.getY());
      points.add(c0.getX());
      points.add(c0.getY());
    }
    if (bn.isC2()) {
      if (points.isEmpty()) {
        points.add(c0.getX());
        points.add(c0.getY());
      }
      points.add(c2.getX());
      points.add(c2.getY());
    }
 else     if (next.isC1()) {
      c2=Transforms.transform(t,next.getC1());
      if (points.isEmpty()) {
        points.add(c0.getX());
        points.add(c0.getY());
      }
      points.add(c2.getX());
      points.add(c2.getY());
    }
  }
}
