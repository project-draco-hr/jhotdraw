{
  if (stopColors.length == 0 || r <= 0) {
    return new Color(0xa0a0a000,true);
  }
  Color[] colors=new Color[stopColors.length];
  float[] fractions=new float[stopColors.length];
  for (int i=0; i < stopColors.length; i++) {
    fractions[i]=(float)stopOffsets[i];
    colors[i]=new Color((stopColors[i].getRGB() & 0xffffff) | ((int)(opacity * stopOpacities[i] * 255) << 24),true);
  }
  Point2D.Double cp, fp;
  double rr;
  cp=new Point2D.Double(cx,cy);
  fp=new Point2D.Double(fx,fy);
  rr=r;
  AffineTransform t=transform;
  if (isRelativeToFigureBounds) {
    if (!t.isIdentity())     System.out.println("RadialGradient " + hashCode() + " t="+ t);
    t=new AffineTransform();
    Rectangle2D.Double bounds=f.getBounds();
    t.translate(bounds.x,bounds.y);
    t.scale(bounds.width,bounds.height);
  }
  org.apache.batik.ext.awt.RadialGradientPaint gp;
  gp=new org.apache.batik.ext.awt.RadialGradientPaint(cp,(float)rr,fp,fractions,colors,RadialGradientPaint.NO_CYCLE,RadialGradientPaint.SRGB,t);
  return gp;
}
