{
  final float initConst=(dgdX * x) + gc;
  float step=(dgdX - (int)dgdX) * fastGradientArraySize;
  if (step < 0)   step+=fastGradientArraySize;
  final int[] grad=gradient;
  for (int i=0; i < h; i++) {
    float g=initConst + dgdY * (y + i);
    g=g - (int)g;
    if (g < 0)     g+=1;
    g*=fastGradientArraySize;
    g+=0.5;
    final int rowLimit=off + w;
    while (off < rowLimit) {
      int idx=(int)g;
      if (idx >= fastGradientArraySize) {
        g-=fastGradientArraySize;
        idx-=fastGradientArraySize;
      }
      pixels[off++]=grad[idx];
      g+=step;
    }
    off+=adjust;
  }
}
