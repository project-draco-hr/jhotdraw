{
  final Application app=getApplication();
  app.setEnabled(true);
  view.setEnabled(false);
  int multipleOpenId=1;
  for (  View aView : app.views()) {
    if (aView != view && aView.isEmpty()) {
      multipleOpenId=Math.max(multipleOpenId,aView.getMultipleOpenId() + 1);
    }
  }
  view.setMultipleOpenId(multipleOpenId);
  view.setEnabled(false);
  view.execute(new BackgroundTask(){
    @Override public void construct() throws IOException {
      boolean exists=true;
      try {
        exists=new File(uri).exists();
      }
 catch (      IllegalArgumentException e) {
      }
      if (exists) {
        view.read(uri,chooser);
      }
 else {
        ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.app.Labels");
        throw new IOException(labels.getFormatted("file.open.fileDoesNotExist.message",URIUtil.getName(uri)));
      }
    }
    @Override protected void done(){
      final Application app=getApplication();
      view.setURI(uri);
      view.setEnabled(true);
      Frame w=(Frame)SwingUtilities.getWindowAncestor(view.getComponent());
      if (w != null) {
        w.setExtendedState(w.getExtendedState() & ~Frame.ICONIFIED);
        w.toFront();
      }
      view.getComponent().requestFocus();
      app.addRecentURI(uri);
      app.setEnabled(true);
    }
    @Override protected void failed(    Throwable value){
      value.printStackTrace();
      view.setEnabled(true);
      app.setEnabled(true);
      String message=value.getMessage() != null ? value.getMessage() : value.toString();
      ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.app.Labels");
      JSheet.showMessageSheet(view.getComponent(),"<html>" + UIManager.getString("OptionPane.css") + "<b>"+ labels.getFormatted("file.open.couldntOpen.message",URIUtil.getName(uri))+ "</b><p>"+ ((message == null) ? "" : message),JOptionPane.ERROR_MESSAGE);
    }
  }
);
}
