{
  SVGRectFigure owner=(SVGRectFigure)getOwner();
  Dimension2DDouble oldArc=new Dimension2DDouble(owner.getArcWidth(),owner.getArcHeight());
  Dimension2DDouble newArc=new Dimension2DDouble(owner.getArcWidth(),owner.getArcHeight());
switch (evt.getKeyCode()) {
case KeyEvent.VK_UP:
    if (newArc.height > 0) {
      newArc.height=Math.max(0,newArc.height - 1);
    }
  evt.consume();
break;
case KeyEvent.VK_DOWN:
newArc.height+=1;
evt.consume();
break;
case KeyEvent.VK_LEFT:
if (newArc.width > 0) {
newArc.width=Math.max(0,newArc.width - 1);
}
evt.consume();
break;
case KeyEvent.VK_RIGHT:
newArc.width+=1;
evt.consume();
break;
}
if (!newArc.equals(oldArc)) {
owner.willChange();
owner.setArc(newArc.width,newArc.height);
owner.changed();
ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.draw.Labels");
CompositeFigureEdit edit=new CompositeFigureEdit(owner,labels.getString("attribute.roundRectRadius"));
fireUndoableEditHappened(edit);
fireUndoableEditHappened(new PropertyChangeEdit(owner,SVGRectFigure.ARC_WIDTH_PROPERTY,oldArc.width,newArc.width));
fireUndoableEditHappened(new PropertyChangeEdit(owner,SVGRectFigure.ARC_HEIGHT_PROPERTY,oldArc.height,newArc.height));
fireUndoableEditHappened(edit);
}
}
