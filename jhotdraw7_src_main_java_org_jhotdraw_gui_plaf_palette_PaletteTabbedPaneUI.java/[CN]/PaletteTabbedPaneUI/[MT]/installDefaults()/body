{
  PaletteLookAndFeel laf=PaletteLookAndFeel.getInstance();
  MetalTabbedPaneUI mtpui;
  PaletteLookAndFeel.installColorsAndFont(tabPane,"TabbedPane.background","TabbedPane.foreground","TabbedPane.font");
  highlight=laf.getColor("TabbedPane.light");
  lightHighlight=laf.getColor("TabbedPane.highlight");
  shadow=laf.getColor("TabbedPane.shadow");
  darkShadow=laf.getColor("TabbedPane.darkShadow");
  focus=laf.getColor("TabbedPane.focus");
  selectedColor=laf.getColor("TabbedPane.selected");
  textIconGap=laf.getInt("TabbedPane.textIconGap");
  tabInsets=laf.getInsets("TabbedPane.tabInsets");
  selectedTabPadInsets=laf.getInsets("TabbedPane.selectedTabPadInsets");
  tabAreaInsets=laf.getInsets("TabbedPane.tabAreaInsets");
  tabsOverlapBorder=laf.getBoolean("TabbedPane.tabsOverlapBorder");
  ;
  contentBorderInsets=laf.getInsets("TabbedPane.contentBorderInsets");
  tabRunOverlay=laf.getInt("TabbedPane.tabRunOverlay");
  tabsOpaque=laf.getBoolean("TabbedPane.tabsOpaque");
  contentOpaque=laf.getBoolean("TabbedPane.contentOpaque");
  Object opaque=laf.get("TabbedPane.opaque");
  if (opaque == null) {
    opaque=Boolean.FALSE;
  }
  PaletteLookAndFeel.installProperty(tabPane,"opaque",opaque);
  if (tabInsets == null) {
    tabInsets=new Insets(0,4,1,4);
  }
  if (selectedTabPadInsets == null) {
    selectedTabPadInsets=new Insets(2,2,2,1);
  }
  if (tabAreaInsets == null) {
    tabAreaInsets=new Insets(3,2,0,2);
  }
  if (contentBorderInsets == null) {
    contentBorderInsets=new Insets(2,2,3,3);
  }
}
