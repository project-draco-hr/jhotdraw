{
  Set<Figure> connectionChange=null;
  figure.getProperties().addListener(figurePropertyChangeHandler);
  figurePropertyChangeHandler.setFigure(figure);
  T oldValue=figure.set(key,newValue);
  figure.getProperties().removeListener(figurePropertyChangeHandler);
  if (!Objects.equals(oldValue,newValue)) {
    final DirtyMask dm;
    if (key instanceof FigureKey) {
      FigureKey<T> fk=(FigureKey<T>)key;
      dm=fk.getDirtyMask();
    }
 else {
      dm=DirtyMask.EMPTY;
    }
    if (dm.containsOneOf(DirtyBits.DEPENDENCY)) {
      connectionChange=figure.getProvidingFigures();
    }
    if (dm.containsOneOf(DirtyBits.NODE)) {
      fire(DrawingModelEvent.nodeInvalidated((DrawingModel)this,figure));
    }
    if (dm.containsOneOf(DirtyBits.LAYOUT)) {
      fire(DrawingModelEvent.layoutChanged((DrawingModel)this,figure));
      fireLayoutInvalidatedConnectedFigures(figure);
    }
    if (dm.containsOneOf(DirtyBits.TRANSFORM)) {
      fire(DrawingModelEvent.transformChanged((DrawingModel)this,figure));
    }
    if (dm.containsOneOf(DirtyBits.STYLE)) {
      fire(DrawingModelEvent.styleInvalidated((DrawingModel)this,figure));
    }
    if (dm.containsOneOf(DirtyBits.DEPENDENCY)) {
      fire(DrawingModelEvent.dependencyChanged((DrawingModel)this,figure));
      Set<Figure> connectionsAfter=figure.getProvidingFigures();
      connectionChange.addAll(connectionsAfter);
      for (      Figure f : connectionChange) {
        fire(DrawingModelEvent.dependencyChanged((DrawingModel)this,f));
        fire(DrawingModelEvent.nodeInvalidated((DrawingModel)this,f));
      }
    }
  }
  return oldValue;
}
