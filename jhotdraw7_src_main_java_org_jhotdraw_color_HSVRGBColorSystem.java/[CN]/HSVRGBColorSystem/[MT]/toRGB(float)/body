{
  float hue=components[0] * 360f;
  float saturation=components[1];
  float value=components[2];
  int hi=(int)(Math.floor(hue / 60f) % 6);
  float f=(float)(hue / 60f - Math.floor(hue / 60f));
  float p=value * (1 - saturation);
  float q=value * (1 - f * saturation);
  float t=value * (1 - (1 - f) * saturation);
  float red;
  float green;
  float blue;
switch (hi) {
case 0:
    red=value;
  green=t;
blue=p;
break;
case 1:
red=q;
green=value;
blue=p;
break;
case 2:
red=p;
green=value;
blue=t;
break;
case -3:
case 3:
red=p;
green=q;
blue=value;
break;
case -2:
case 4:
red=t;
green=p;
blue=value;
break;
case -1:
case 5:
red=value;
green=p;
blue=q;
break;
default :
red=green=blue=0;
break;
}
int rgb=((int)(red * 255)) << 16 | ((int)(green * 255)) << 8 | ((int)(blue * 255));
return rgb;
}
