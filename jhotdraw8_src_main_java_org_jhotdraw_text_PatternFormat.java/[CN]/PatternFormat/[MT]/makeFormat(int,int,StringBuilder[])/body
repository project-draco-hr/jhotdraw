{
  String[] segments=new String[textSegments.length];
  for (int i=0; i < textSegments.length; i++) {
    StringBuilder oneseg=textSegments[i];
    segments[i]=(oneseg != null) ? oneseg.toString() : "";
  }
  int argumentNumber;
  try {
    argumentNumber=Integer.parseInt(segments[SEG_INDEX]);
  }
 catch (  NumberFormatException e) {
    throw new IllegalArgumentException("can't parse argument number: " + segments[SEG_INDEX],e);
  }
  if (argumentNumber < 0) {
    throw new IllegalArgumentException("negative argument number: " + argumentNumber);
  }
  if (offsetNumber >= formats.length) {
    int newLength=formats.length * 2;
    Format[] newFormats=new Format[newLength];
    int[] newOffsets=new int[newLength];
    int[] newArgumentNumbers=new int[newLength];
    System.arraycopy(formats,0,newFormats,0,maxOffset + 1);
    System.arraycopy(offsets,0,newOffsets,0,maxOffset + 1);
    System.arraycopy(argumentNumbers,0,newArgumentNumbers,0,maxOffset + 1);
    formats=newFormats;
    offsets=newOffsets;
    argumentNumbers=newArgumentNumbers;
  }
  int oldMaxOffset=maxOffset;
  maxOffset=offsetNumber;
  offsets[offsetNumber]=segments[SEG_RAW].length();
  argumentNumbers[offsetNumber]=argumentNumber;
  Format newFormat=null;
  if (segments[SEG_TYPE].length() != 0) {
    String type=segments[SEG_TYPE];
    String modifier=null;
    if (segments[SEG_MODIFIER] != null) {
      modifier=segments[SEG_MODIFIER];
    }
    newFormat=factory.apply(type,modifier);
    formats[offsetNumber]=newFormat;
  }
}
