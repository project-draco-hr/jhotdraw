{
  Rectangle2D.Double textRect=new Rectangle2D.Double();
  if (getText() != null) {
    Font font=getFont();
    boolean isUnderlined=FONT_UNDERLINE.get(this);
    float leftMargin=0;
    float rightMargin=(float)maxWidth - 1;
    float verticalPos=0;
    float maxVerticalPos=Float.MAX_VALUE;
    if (leftMargin < rightMargin) {
      float tabWidth=(float)(getTabSize() * font.getStringBounds("m",getFontRenderContext()).getWidth());
      float[] tabStops=new float[(int)(textRect.width / tabWidth)];
      for (int i=0; i < tabStops.length; i++) {
        tabStops[i]=(float)(textRect.x + (int)(tabWidth * (i + 1)));
      }
      if (getText() != null) {
        String[] paragraphs=getText().split("\n");
        for (int i=0; i < paragraphs.length; i++) {
          if (paragraphs[i].length() == 0) {
            paragraphs[i]=" ";
          }
          AttributedString as=new AttributedString(paragraphs[i]);
          as.addAttribute(TextAttribute.FONT,font);
          if (isUnderlined) {
            as.addAttribute(TextAttribute.UNDERLINE,TextAttribute.UNDERLINE_LOW_ONE_PIXEL);
          }
          int tabCount=new StringTokenizer(paragraphs[i],"\t").countTokens() - 1;
          Rectangle2D.Double paragraphBounds=appendParagraph(null,as.getIterator(),verticalPos,maxVerticalPos,leftMargin,rightMargin,tabStops,tabCount);
          verticalPos=(float)(paragraphBounds.y + paragraphBounds.height);
          textRect.add(paragraphBounds);
        }
      }
    }
  }
  return new Dimension2DDouble(Math.abs(textRect.x) + textRect.width,Math.abs(textRect.y) + textRect.height);
}
