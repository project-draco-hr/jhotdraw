{
  value=value.trim().toLowerCase();
  if (value.equals("none")) {
    return null;
  }
 else   if (value.equals("currentColor")) {
    return CURRENT_COLOR;
  }
 else   if (value.equals("inherit")) {
    return INHERIT_COLOR;
  }
 else   if (SVG_COLORS.containsKey(value)) {
    return SVG_COLORS.get(value);
  }
 else   if (value.startsWith("#") && value.length() == 7) {
    return new Color(Integer.decode(value));
  }
 else   if (value.startsWith("#") && value.length() == 4) {
    int th=Integer.decode(value);
    return new Color((th & 0xf) | ((th & 0xf) << 4) | ((th & 0xf0) << 4)| ((th & 0xf0) << 8)| ((th & 0xf00) << 8)| ((th & 0xf00) << 12));
  }
 else   if (value.startsWith("rgb")) {
    StringTokenizer tt=new StringTokenizer(value,"() ,");
    tt.nextToken();
    Color c=new Color(Integer.decode(tt.nextToken()),Integer.decode(tt.nextToken()),Integer.decode(tt.nextToken()));
    return c;
  }
 else {
    return null;
  }
}
