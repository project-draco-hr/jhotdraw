{
  Color color;
  Double dbl;
  String value;
  color=FILL_COLOR.get(f);
  if (color == null) {
    value="none";
  }
 else {
    value="000000" + Integer.toHexString(color.getRGB());
    value="#" + value.substring(value.length() - 6);
  }
  out.addAttribute("fill",value);
  if (WINDING_RULE.get(f) != WindingRule.NON_ZERO) {
    out.addAttribute("fill-rule","evenodd");
  }
  color=STROKE_COLOR.get(f);
  if (color == null) {
    value="none";
  }
 else {
    value="000000" + Integer.toHexString(color.getRGB());
    value="#" + value.substring(value.length() - 6);
  }
  out.addAttribute("stroke",value);
  out.addAttribute("stroke-width",STROKE_WIDTH.get(f),1d);
  out.addAttribute("stroke-miterlimit",STROKE_MITER_LIMIT.get(f) / STROKE_WIDTH.get(f),4d);
  double[] dashes=STROKE_DASHES.get(f);
  dbl=(IS_STROKE_DASH_FACTOR.get(f)) ? STROKE_WIDTH.get(f) : 1d;
  if (dashes != null) {
    StringBuilder buf=new StringBuilder();
    for (int i=0; i < dashes.length; i++) {
      if (i != 0) {
        buf.append(',');
        buf.append(dashes[i] * dbl);
      }
      out.addAttribute("stroke-dasharray",buf.toString());
    }
  }
  out.addAttribute("stroke-dashoffset",STROKE_DASH_PHASE.get(f) * dbl,0d);
  out.addAttribute("font-size",FONT_SIZE.get(f));
}
