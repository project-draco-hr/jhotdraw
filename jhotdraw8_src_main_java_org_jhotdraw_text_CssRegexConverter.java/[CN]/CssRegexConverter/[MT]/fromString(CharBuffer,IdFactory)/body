{
  CssTokenizer tt=new CssTokenizer(new StringReader(in.toString()));
  String find;
  String replace;
  tt.skipWhitespace();
  if (tt.nextToken() == CssTokenizer.TT_IDENT) {
    if (!nullable) {
      throw new ParseException("'/' expected",tt.getPosition());
    }
    if (!"none".equals(tt.currentStringValue())) {
      throw new ParseException("none or '/' expected",tt.getPosition());
    }
    in.position(in.limit());
    return null;
  }
 else {
    tt.pushBack();
  }
  if (tt.nextToken() != '/') {
    throw new ParseException("first / expected",tt.getPosition());
  }
  tt.skipWhitespace();
  if (tt.nextToken() != CssTokenizer.TT_STRING) {
    throw new ParseException("find string expected",tt.getPosition());
  }
  find=tt.currentStringValue();
  tt.skipWhitespace();
  if (tt.nextToken() != '/') {
    throw new ParseException("second / expected",tt.getPosition());
  }
  tt.skipWhitespace();
  if (tt.nextToken() == CssTokenizer.TT_STRING) {
    replace=tt.currentStringValue();
    tt.skipWhitespace();
    if (tt.nextToken() != '/') {
      throw new ParseException("third / expected",tt.getPosition());
    }
  }
 else {
    replace="$0";
    tt.pushBack();
  }
  tt.skipWhitespace();
  in.position(in.limit());
  return new Regex(find,replace);
}
