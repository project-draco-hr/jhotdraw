{
  try {
    Method method=obj.getClass().getMethod(methodName,new Class<?>[0]);
    Object result=method.invoke(obj,new Object[0]);
    return result;
  }
 catch (  IllegalAccessException e) {
    throw new NoSuchMethodException(methodName + " is not accessible");
  }
catch (  InvocationTargetException e) {
    throw new InternalError(e.getMessage());
  }
}
