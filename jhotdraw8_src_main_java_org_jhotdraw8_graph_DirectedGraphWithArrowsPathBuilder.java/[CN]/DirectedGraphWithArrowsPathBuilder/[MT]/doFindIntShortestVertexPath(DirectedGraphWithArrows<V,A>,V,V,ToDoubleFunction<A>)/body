{
  @SuppressWarnings("unchecked") IntDirectedGraphWithArrows<A> intGraph=(IntDirectedGraphWithArrows<A>)graph;
  int startIndex=-1, goalIndex=-1;
  for (int i=0, n=graph.getVertexCount(); i < n; i++) {
    V v=graph.getVertex(i);
    if (v == start) {
      startIndex=i;
      if (goalIndex != -1) {
        break;
      }
    }
    if (v == goal) {
      goalIndex=i;
      if (startIndex != -1) {
        break;
      }
    }
  }
  VertexPath<Integer> intPath=findIntShortestVertexPath(intGraph,startIndex,goalIndex,costf);
  if (intPath == null) {
    return null;
  }
  ArrayList<V> elements=new ArrayList<>(intPath.getVertices().size());
  for (  Integer vi : intPath.getVertices()) {
    elements.add(graph.getVertex(vi));
  }
  return new VertexPath<>(elements);
}
