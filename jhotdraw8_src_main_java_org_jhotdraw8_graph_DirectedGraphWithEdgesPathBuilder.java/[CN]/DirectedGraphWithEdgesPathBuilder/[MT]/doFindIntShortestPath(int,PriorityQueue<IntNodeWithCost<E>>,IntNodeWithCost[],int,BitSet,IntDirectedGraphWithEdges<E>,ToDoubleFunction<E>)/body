{
  IntNodeWithCost<E> node=new IntNodeWithCost<>(start,0.0,null,null);
  frontier.add(node);
  while (true) {
    if (frontier.isEmpty()) {
      return null;
    }
    node=frontier.poll();
    final int vertex=node.vertex;
    frontierMap[vertex]=null;
    if (vertex == goal) {
      break;
    }
    explored.set(node.getVertex());
    for (int i=0, count=graph.getNextCount(vertex); i < count; i++) {
      int next=graph.getNext(vertex,i);
      final E edge=graph.getNextEdge(vertex,i);
      double cost=node.cost + costf.applyAsDouble(edge);
      @SuppressWarnings("unchecked") IntNodeWithCost<E> nwcInFrontier=frontierMap[next];
      if (!explored.get(next) && nwcInFrontier == null) {
        IntNodeWithCost<E> nwc=new IntNodeWithCost<>(next,cost,node,edge);
        frontier.add(nwc);
        frontierMap[next]=nwc;
      }
 else       if (nwcInFrontier != null) {
        if (nwcInFrontier.cost > cost) {
          frontier.remove(nwcInFrontier);
          nwcInFrontier.cost=cost;
          nwcInFrontier.parent=node;
          nwcInFrontier.edge=edge;
          frontier.add(nwcInFrontier);
        }
      }
    }
  }
  return node;
}
