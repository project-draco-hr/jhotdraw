{
  final int vertexCount=graph.getVertexCount();
  if (intFrontierMap == null || intFrontierMap.length < vertexCount) {
    intFrontierMap=new IntNodeWithCost[vertexCount];
    intExplored=new BitSet(vertexCount);
    intFrontier=new PriorityQueue<>();
  }
  IntNodeWithCost<E> result=doFindIntShortestPath(start,intFrontier,intFrontierMap,goal,intExplored,graph,costf);
  intFrontier.clear();
  intExplored.clear();
  clear(intFrontierMap);
  return result;
}
