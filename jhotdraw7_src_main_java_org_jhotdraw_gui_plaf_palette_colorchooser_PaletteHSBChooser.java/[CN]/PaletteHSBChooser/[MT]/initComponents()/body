{
  java.awt.GridBagConstraints gridBagConstraints;
  hueLabel=new javax.swing.JLabel();
  hueSlider=new javax.swing.JSlider();
  hueFieldPanel=new javax.swing.JPanel();
  hueField=new javax.swing.JTextField();
  hueFieldLabel=new javax.swing.JLabel();
  saturationLabel=new javax.swing.JLabel();
  saturationSlider=new javax.swing.JSlider();
  saturationFieldPanel=new javax.swing.JPanel();
  saturationField=new javax.swing.JTextField();
  saturationFieldLabel=new javax.swing.JLabel();
  brightnessLabel=new javax.swing.JLabel();
  brightnessSlider=new javax.swing.JSlider();
  brightnessFieldPanel=new javax.swing.JPanel();
  brightnessField=new javax.swing.JTextField();
  brightnessFieldLabel=new javax.swing.JLabel();
  springPanel=new javax.swing.JPanel();
  setLayout(new java.awt.GridBagLayout());
  hueLabel.setText(labels.getString("ColorChooser.hsbHueText"));
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTHWEST;
  gridBagConstraints.insets=new java.awt.Insets(3,0,-4,0);
  add(hueLabel,gridBagConstraints);
  hueSlider.setMajorTickSpacing(359);
  hueSlider.setMaximum(359);
  hueSlider.setMinorTickSpacing(180);
  hueSlider.setPaintTicks(true);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.WEST;
  gridBagConstraints.weightx=1.0;
  add(hueSlider,gridBagConstraints);
  hueFieldPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER,0,0));
  hueField.setColumns(3);
  hueField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
  hueField.setText("0");
  hueField.addFocusListener(new java.awt.event.FocusAdapter(){
    public void focusGained(    java.awt.event.FocusEvent evt){
      fieldFocusGained(evt);
    }
    public void focusLost(    java.awt.event.FocusEvent evt){
      hueFieldFocusLost(evt);
    }
  }
);
  hueFieldPanel.add(hueField);
  hueFieldLabel.setText("??");
  hueFieldPanel.add(hueFieldLabel);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=1;
  gridBagConstraints.gridy=0;
  gridBagConstraints.gridheight=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTH;
  add(hueFieldPanel,gridBagConstraints);
  saturationLabel.setText(labels.getString("ColorChooser.hsbSaturationText"));
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTHWEST;
  gridBagConstraints.insets=new java.awt.Insets(3,0,-4,0);
  add(saturationLabel,gridBagConstraints);
  saturationSlider.setMajorTickSpacing(100);
  saturationSlider.setMinorTickSpacing(50);
  saturationSlider.setPaintTicks(true);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.WEST;
  gridBagConstraints.weightx=1.0;
  add(saturationSlider,gridBagConstraints);
  saturationFieldPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER,0,0));
  saturationField.setColumns(3);
  saturationField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
  saturationField.setText("0");
  saturationField.addFocusListener(new java.awt.event.FocusAdapter(){
    public void focusGained(    java.awt.event.FocusEvent evt){
      fieldFocusGained(evt);
    }
    public void focusLost(    java.awt.event.FocusEvent evt){
      saturationFieldFocusLost(evt);
    }
  }
);
  saturationFieldPanel.add(saturationField);
  saturationFieldLabel.setText("%");
  saturationFieldPanel.add(saturationFieldLabel);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=1;
  gridBagConstraints.gridy=2;
  gridBagConstraints.gridheight=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTH;
  add(saturationFieldPanel,gridBagConstraints);
  brightnessLabel.setText(labels.getString("ColorChooser.hsbBrightnessText"));
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTHWEST;
  gridBagConstraints.insets=new java.awt.Insets(3,0,-4,0);
  add(brightnessLabel,gridBagConstraints);
  brightnessSlider.setMajorTickSpacing(100);
  brightnessSlider.setMinorTickSpacing(50);
  brightnessSlider.setPaintTicks(true);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.WEST;
  gridBagConstraints.weightx=1.0;
  add(brightnessSlider,gridBagConstraints);
  brightnessFieldPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER,0,0));
  brightnessField.setColumns(3);
  brightnessField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
  brightnessField.setText("0");
  brightnessField.addFocusListener(new java.awt.event.FocusAdapter(){
    public void focusGained(    java.awt.event.FocusEvent evt){
      fieldFocusGained(evt);
    }
    public void focusLost(    java.awt.event.FocusEvent evt){
      brightnessFieldFocusLost(evt);
    }
  }
);
  brightnessFieldPanel.add(brightnessField);
  brightnessFieldLabel.setText("%");
  brightnessFieldPanel.add(brightnessFieldLabel);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=1;
  gridBagConstraints.gridy=4;
  gridBagConstraints.gridheight=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.SOUTH;
  add(brightnessFieldPanel,gridBagConstraints);
  springPanel.setLayout(new java.awt.BorderLayout());
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.gridy=100;
  gridBagConstraints.weighty=1.0;
  add(springPanel,gridBagConstraints);
}
