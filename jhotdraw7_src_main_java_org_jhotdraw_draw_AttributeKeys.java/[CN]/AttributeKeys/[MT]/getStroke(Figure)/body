{
  double strokeWidth=STROKE_WIDTH.get(f);
  float miterLimit=(float)getStrokeTotalMiterLimit(f);
  double dashFactor=IS_STROKE_DASH_FACTOR.get(f) ? strokeWidth : 1d;
  double[] ddashes=STROKE_DASHES.get(f);
  float[] dashes=null;
  if (ddashes != null) {
    dashes=new float[ddashes.length];
    for (int i=0; i < dashes.length; i++) {
      dashes[i]=(float)(ddashes[i] * dashFactor);
    }
  }
switch (STROKE_TYPE.get(f)) {
case BASIC:
default :
    return new BasicStroke((float)strokeWidth,STROKE_CAP.get(f),STROKE_JOIN.get(f),miterLimit,dashes,(float)(STROKE_DASH_PHASE.get(f) * dashFactor));
case DOUBLE:
  return new DoubleStroke((float)(STROKE_INNER_WIDTH_FACTOR.get(f) * strokeWidth),(float)strokeWidth,STROKE_CAP.get(f),STROKE_JOIN.get(f),miterLimit,dashes,(float)(STROKE_DASH_PHASE.get(f).floatValue() * dashFactor));
}
}
