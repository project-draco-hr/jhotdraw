{
  getVersionControlStrategy().assertCompatibleVersion();
  setUndoManager(new UndoManager());
  setIconkit(createIconkit());
  getContentPane().setLayout(new BorderLayout());
  setStatusLine(createStatusLine());
  getContentPane().add(getStatusLine(),BorderLayout.SOUTH);
  setTool(new NullTool(this),"");
  setView(newDrawingView);
  JToolBar tools=createToolPalette();
  createTools(tools);
  JPanel activePanel=new JPanel();
  activePanel.setAlignmentX(LEFT_ALIGNMENT);
  activePanel.setAlignmentY(TOP_ALIGNMENT);
  activePanel.setLayout(new BorderLayout());
  activePanel.add(tools,BorderLayout.NORTH);
  setDesktopListener(createDesktopListener());
  setDesktop(createDesktop());
  activePanel.add((Component)getDesktop(),BorderLayout.CENTER);
  getContentPane().add(activePanel,BorderLayout.CENTER);
  JMenuBar mb=new JMenuBar();
  createMenus(mb);
  setJMenuBar(mb);
  Dimension d=defaultSize();
  if (d.width > mb.getPreferredSize().width) {
    setSize(d.width,d.height);
  }
 else {
    setSize(mb.getPreferredSize().width,d.height);
  }
  addListeners();
  setStorageFormatManager(createStorageFormatManager());
  setVisible(true);
  Runnable r=new Runnable(){
    public void run(){
      if (newDrawingView.isInteractive()) {
        getDesktop().addToDesktop(newDrawingView,Desktop.PRIMARY);
      }
      toolDone();
    }
  }
;
  if (java.awt.EventQueue.isDispatchThread() == false) {
    try {
      java.awt.EventQueue.invokeAndWait(r);
    }
 catch (    java.lang.InterruptedException ie) {
      System.err.println(ie.getMessage());
      endApp();
    }
catch (    java.lang.reflect.InvocationTargetException ite) {
      System.err.println(ite.getMessage());
      endApp();
    }
  }
 else {
    r.run();
  }
}
