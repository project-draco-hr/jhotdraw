{
  double startX=0.0, startY=0.0, endX=0.0, endY=1.0;
  Boolean isProportional=null;
switch (tt.nextToken()) {
case CssTokenizer.TT_NUMBER:
    startX=tt.currentNumericValue().doubleValue();
  isProportional=false;
break;
case CssTokenizer.TT_PERCENTAGE:
isProportional=true;
startX=tt.currentNumericValue().doubleValue() / 100.0;
break;
case CssTokenizer.TT_DIMENSION:
isProportional=false;
if (!"px".equals(tt.currentStringValue())) {
throw new ParseException("CSS LinearGradient: start-x given in pixels or percentage expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
startX=tt.currentNumericValue().doubleValue();
break;
default :
throw new ParseException("CSS LinearGradient: start-x expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
switch (tt.nextToken()) {
case CssTokenizer.TT_NUMBER:
if (isProportional) {
throw new ParseException("CSS LinearGradient: start-y as percentage value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
startY=tt.currentNumericValue().doubleValue();
break;
case CssTokenizer.TT_PERCENTAGE:
if (!isProportional) {
throw new ParseException("CSS LinearGradient: start-y as absolute value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
startY=tt.currentNumericValue().doubleValue() / 100.0;
break;
case CssTokenizer.TT_DIMENSION:
if (isProportional) {
throw new ParseException("CSS LinearGradient: start-y as percentage value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
if (!"px".equals(tt.currentStringValue())) {
throw new ParseException("CSS LinearGradient: start-y given in pixels or percentage expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
startY=tt.currentNumericValue().doubleValue();
break;
default :
throw new ParseException("CSS LinearGradient: start-y expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
if (tt.nextToken() == CssTokenizer.TT_IDENT && "to".equals(tt.currentStringValue())) {
switch (tt.nextToken()) {
case CssTokenizer.TT_NUMBER:
if (isProportional) {
throw new ParseException("CSS LinearGradient: end-x as percentage value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
endX=tt.currentNumericValue().doubleValue();
break;
case CssTokenizer.TT_PERCENTAGE:
if (!isProportional) {
throw new ParseException("CSS LinearGradient: end-x as absolute value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
endX=tt.currentNumericValue().doubleValue() / 100.0;
break;
case CssTokenizer.TT_DIMENSION:
if (isProportional) {
throw new ParseException("CSS LinearGradient: end-x as percentage value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
if (!"px".equals(tt.currentStringValue())) {
throw new ParseException("CSS LinearGradient: end-x given in pixels or percentage expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
endX=tt.currentNumericValue().doubleValue();
break;
default :
throw new ParseException("CSS LinearGradient: end-x expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
switch (tt.nextToken()) {
case CssTokenizer.TT_NUMBER:
if (isProportional) {
throw new ParseException("CSS LinearGradient: end-y as proportional value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
endY=tt.currentNumericValue().doubleValue();
break;
case CssTokenizer.TT_PERCENTAGE:
if (!isProportional) {
throw new ParseException("CSS LinearGradient: end-y as absolute value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
endY=tt.currentNumericValue().doubleValue() / 100.0;
break;
case CssTokenizer.TT_DIMENSION:
if (isProportional) {
throw new ParseException("CSS LinearGradient: end-y as proportional value expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
if (!"px".equals(tt.currentStringValue())) {
throw new ParseException("CSS LinearGradient: end-y given in pixels or percent expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
endY=tt.currentNumericValue().doubleValue();
break;
default :
throw new ParseException("CSS LinearGradient: end-y expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
}
 else {
throw new ParseException("CSS LinearGradient: 'to' expected, found: " + tt.currentStringValue() + " ttype:"+ tt.currentToken(),tt.getPosition());
}
return new PointToPoint(startX,startY,endX,endY,isProportional);
}
