{
  Point2D.Double point=owner.getPointOnPath((float)relativePosition,3);
  if (point == null) {
    return new Point2D.Double(0,0);
  }
  Point2D.Double nextPoint=owner.getPointOnPath((relativePosition < 0.5) ? (float)relativePosition + 0.1f : (float)relativePosition - 0.1f,3);
  double dir=Math.atan2(nextPoint.y - point.y,nextPoint.x - point.x);
  if (relativePosition >= 0.5) {
    dir+=Math.PI;
  }
  double alpha=dir + angle;
  Point2D.Double p=new Point2D.Double(point.x + distance * Math.cos(alpha),point.y + distance * Math.sin(alpha));
  if (Double.isNaN(p.x))   p=point;
  Dimension2DDouble labelDim=label.getPreferredSize();
  if (relativePosition == 0.5 && p.x >= point.x - distance / 2 && p.x <= point.x + distance / 2) {
    if (p.y >= point.y) {
      return new Point2D.Double(p.x - labelDim.width / 2,p.y);
    }
 else {
      return new Point2D.Double(p.x - labelDim.width / 2,p.y - labelDim.height);
    }
  }
 else {
    if (p.x >= point.x) {
      if (p.y >= point.y) {
        return new Point2D.Double(p.x,p.y);
      }
 else {
        return new Point2D.Double(p.x,p.y - labelDim.height);
      }
    }
 else {
      if (p.y >= point.y) {
        return new Point2D.Double(p.x - labelDim.width,p.y);
      }
 else {
        return new Point2D.Double(p.x - labelDim.width,p.y - labelDim.height);
      }
    }
  }
}
