{
  SelectorModel<E> selectorModel=getSelectorModel();
  for (  Declaration d : collectApplicableDeclarations(elem,getUserAgentStylesheets())) {
    doSetAttribute(selectorModel,elem,StyleOrigin.USER_AGENT,d.getProperty(),d.getTermsAsString());
  }
  for (  Declaration d : collectApplicableDeclarations(elem,getAuthorStylesheets())) {
    doSetAttribute(selectorModel,elem,StyleOrigin.AUTHOR,d.getProperty(),d.getTermsAsString());
  }
  for (  Declaration d : collectApplicableDeclarations(elem,getInlineStylesheets())) {
    doSetAttribute(selectorModel,elem,StyleOrigin.INLINE,d.getProperty(),d.getTermsAsString());
  }
  if (selectorModel.hasAttribute(elem,"style")) {
    Map<String,String> inlineDeclarations=new HashMap<>();
    String styleValue=selectorModel.getAttribute(elem,"style");
    try {
      for (      Declaration d : parser.parseDeclarationList(styleValue)) {
        if (d.getTerms().isEmpty()) {
          continue;
        }
        inlineDeclarations.put(d.getProperty(),d.getTermsAsString());
      }
    }
 catch (    IOException ex) {
      System.err.println("DOMStyleManager: Invalid style attribute on element. style=" + styleValue);
      ex.printStackTrace();
    }
    for (    Map.Entry<String,String> entry : inlineDeclarations.entrySet()) {
      doSetAttribute(selectorModel,elem,StyleOrigin.INLINE,entry.getKey(),entry.getValue());
    }
    inlineDeclarations.clear();
  }
}
