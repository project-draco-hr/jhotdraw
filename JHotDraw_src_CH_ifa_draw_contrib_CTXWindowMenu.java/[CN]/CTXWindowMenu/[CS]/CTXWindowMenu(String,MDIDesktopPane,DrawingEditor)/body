{
  super(newText);
  this.desktop=desktop;
  cascadeCommand=new CommandMenuItem(new AbstractCommand("Cascade",editor){
    public void execute(){
      CTXWindowMenu.this.desktop.cascadeFrames();
    }
    public boolean isExecutable(){
      return super.isExecutable() && (CTXWindowMenu.this.desktop.getAllFrames().length > 0);
    }
  }
);
  tileHCommand=new CommandMenuItem(new AbstractCommand("Tile Horizontally",editor){
    public void execute(){
      CTXWindowMenu.this.desktop.tileFramesHorizontally();
    }
    public boolean isExecutable(){
      return super.isExecutable() && (CTXWindowMenu.this.desktop.getAllFrames().length > 0);
    }
  }
);
  tileVCommand=new CommandMenuItem(new AbstractCommand("Tile Vertically",editor){
    public void execute(){
      CTXWindowMenu.this.desktop.tileFramesVertically();
    }
    public boolean isExecutable(){
      return super.isExecutable() && (CTXWindowMenu.this.desktop.getAllFrames().length > 0);
    }
  }
);
  arrangeHCommand=new CommandMenuItem(new AbstractCommand("Arrange Horizontally",editor){
    public void execute(){
      CTXWindowMenu.this.desktop.arrangeFramesHorizontally();
    }
    public boolean isExecutable(){
      return super.isExecutable() && (CTXWindowMenu.this.desktop.getAllFrames().length > 0);
    }
  }
);
  arrangeVCommand=new CommandMenuItem(new AbstractCommand("Arrange Vertically",editor){
    public void execute(){
      CTXWindowMenu.this.desktop.arrangeFramesVertically();
    }
    public boolean isExecutable(){
      return super.isExecutable() && (CTXWindowMenu.this.desktop.getAllFrames().length > 0);
    }
  }
);
  addMenuListener(new MenuListener(){
    public void menuCanceled(    MenuEvent e){
    }
    public void menuDeselected(    MenuEvent e){
      removeWindowsList();
    }
    public void menuSelected(    MenuEvent e){
      buildChildMenus();
    }
  }
);
  add(cascadeCommand);
  add(tileHCommand);
  add(tileVCommand);
  add(arrangeHCommand);
  add(arrangeVCommand);
  staticItems=5;
}
