{
  transform=new AffineTransform(transform);
  transform.concatenate(gradientTransform);
  try {
    return new RadialGradientPaintContext(cm,deviceBounds,userBounds,transform,hints,(float)center.getX(),(float)center.getY(),radius,(float)focus.getX(),(float)focus.getY(),fractions,colors,cycleMethod,colorSpace);
  }
 catch (  NoninvertibleTransformException e) {
    throw new IllegalArgumentException("transform should be " + "invertible");
  }
}
