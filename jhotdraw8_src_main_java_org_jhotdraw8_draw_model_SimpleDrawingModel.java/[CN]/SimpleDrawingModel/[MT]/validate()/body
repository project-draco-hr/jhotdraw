{
  if (!valid) {
    isValidating=true;
    final Set<Figure> visited=new HashSet<>((int)(dirties.size() * 1.4));
    DirtyMask dmStyle=DirtyMask.of(DirtyBits.STYLE);
    for (    Map.Entry<Figure,DirtyMask> entry : new ArrayList<>(dirties.entrySet())) {
      Figure f=entry.getKey();
      DirtyMask dm=entry.getValue();
      if (dm.intersects(dmStyle) && visited.add(f)) {
        f.stylesheetNotify();
        markDirty(f,DirtyBits.NODE,DirtyBits.TRANSFORM,DirtyBits.LAYOUT);
      }
    }
    visited.clear();
    DirtyMask dmTransform=DirtyMask.of(DirtyBits.TRANSFORM);
    for (    Map.Entry<Figure,DirtyMask> entry : new ArrayList<>(dirties.entrySet())) {
      Figure f=entry.getKey();
      DirtyMask dm=entry.getValue();
      if (dm.intersects(dmTransform) && visited.add(f)) {
        for (        Figure a : f.preorderIterable()) {
          if (visited.add(a)) {
            if (a instanceof TransformableFigure) {
              markDirty(a,DirtyBits.TRANSFORM,DirtyBits.LAYOUT_OBSERVERS);
            }
          }
        }
      }
    }
    for (    Map.Entry<Figure,DirtyMask> entry : new ArrayList<>(dirties.entrySet())) {
      Figure f=entry.getKey();
      DirtyMask dm=entry.getValue();
      if (dm.intersects(dmTransform)) {
        f.transformNotify();
      }
    }
    DirtyMask dmLayout=DirtyMask.of(DirtyBits.LAYOUT);
    for (    Map.Entry<Figure,DirtyMask> entry : new ArrayList<>(dirties.entrySet())) {
      Figure f=entry.getKey();
      DirtyMask dm=entry.getValue();
      if (dm.intersects(dmLayout)) {
        for (        Figure p : f.ancestorIterable()) {
          if (p == f) {
            continue;
          }
          if (p.isLayoutable()) {
            markDirty(p,DirtyBits.LAYOUT,DirtyBits.NODE);
          }
 else {
            break;
          }
        }
      }
    }
    visited.clear();
    DirtyMask dmLayoutObservers=DirtyMask.of(DirtyBits.LAYOUT_OBSERVERS);
    Set<Figure> todo=new LinkedHashSet<>(dirties.size());
    for (    Map.Entry<Figure,DirtyMask> entry : new ArrayList<>(dirties.entrySet())) {
      Figure f=entry.getKey();
      DirtyMask dm=entry.getValue();
      if (dm.intersects(dmLayout) && visited.add(f)) {
        for (        Figure a : f.preorderIterable()) {
          todo.add(a);
        }
      }
 else       if (dm.intersects(dmLayoutObservers) && visited.add(f)) {
        for (        Figure obs : f.getLayoutObservers()) {
          todo.add(obs);
        }
      }
    }
    visited.clear();
    DirectedGraphBuilder<Figure> graphBuilder=new DirectedGraphBuilder<>();
    while (!todo.isEmpty()) {
      Figure f=todo.iterator().next();
      todo.remove(f);
      if (visited.add(f)) {
        graphBuilder.addVertex(f);
        for (        Figure obs : f.getLayoutObservers()) {
          graphBuilder.addVertex(obs);
          graphBuilder.addEdge(f,obs);
          todo.add(obs);
        }
      }
    }
    visited.clear();
    if (graphBuilder.getVertexCount() > 0) {
      for (      Figure f : DirectedGraphs.sortTopologically(graphBuilder)) {
        if (visited.add(f)) {
          f.layoutNotify();
          markDirty(f,DirtyBits.NODE);
        }
      }
    }
    DirtyMask dmNode=DirtyMask.of(DirtyBits.NODE);
    for (    Map.Entry<Figure,DirtyMask> entry : dirties.entrySet()) {
      Figure f=entry.getKey();
      DirtyMask dm=entry.getValue();
      if (dm.intersects(dmNode)) {
        fireNodeInvalidated(f);
      }
    }
    for (    Map.Entry<Figure,DirtyMask> entry : dirties.entrySet()) {
      Figure f=entry.getKey();
      DirtyMask dm=entry.getValue();
      if (dm.intersects(dmTransform)) {
        f.transformNotify();
      }
    }
    dirties.clear();
    isValidating=false;
    valid=true;
  }
}
