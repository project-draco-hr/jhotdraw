{
  view.getDrawing().basicRemoveAll(figures);
  view.clearSelection();
  view.getDrawing().add(groupIndex,group);
  group.willChange();
  group.basicRemoveAllChildren();
  AffineTransform tx=figures.iterator().next().get(TRANSFORM);
  for (  Figure f : figures) {
    AffineTransform ftx=f.get(TRANSFORM);
    if (ftx == tx || ftx != null && tx != null && ftx.equals(tx)) {
    }
 else {
      tx=null;
      break;
    }
  }
  for (  Map.Entry<AttributeKey<?>,Object> entry : figures.iterator().next().getAttributes().entrySet()) {
    group.set((AttributeKey<Object>)entry.getKey(),entry.getValue());
  }
  group.set(TRANSFORM,tx);
  for (  Figure f : figures) {
    SVGPathFigure path=(SVGPathFigure)f;
    if (tx == null) {
      path.flattenTransform();
    }
    List<Figure> children=new LinkedList<Figure>(path.getChildren());
    path.basicRemoveAllChildren();
    for (    Figure child : children) {
      SVGBezierFigure bez=(SVGBezierFigure)child;
      child.willChange();
      group.basicAdd(child);
    }
  }
  group.changed();
  view.addToSelection(group);
}
