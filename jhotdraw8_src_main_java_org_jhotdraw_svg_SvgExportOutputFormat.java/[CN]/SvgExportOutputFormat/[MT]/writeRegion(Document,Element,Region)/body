{
  Element elem=doc.createElement("g");
  parent.appendChild(elem);
  double x=region.getLayoutX();
  double y=region.getLayoutY();
  double width=region.getWidth();
  double height=region.getHeight();
  if ((region.getBackground() != null && !region.getBackground().isEmpty()) || (region.getBorder() != null && !region.getBorder().isEmpty())) {
    Shape s=(region.getShape() == null) ? null : region.getShape();
    Bounds sb=(s != null) ? s.getLayoutBounds() : null;
    if (region.getBackground() != null) {
      for (      BackgroundFill bgf : region.getBackground().getFills()) {
        Paint fill=bgf.getFill() == null ? Color.TRANSPARENT : bgf.getFill();
        CornerRadii radii=bgf.getRadii() == null ? CornerRadii.EMPTY : bgf.getRadii();
        Insets insets=bgf.getInsets() == null ? Insets.EMPTY : bgf.getInsets();
        Shape bgs=null;
        if (s != null) {
          if (region.isScaleShape()) {
            java.awt.Shape awtShape=Shapes.awtShapeFromFX(s);
            Transform tx=Transform.translate(-sb.getMinX(),-sb.getMinY());
            tx=tx.createConcatenation(Transform.translate(x + insets.getLeft(),y + insets.getTop()));
            tx=tx.createConcatenation(Transform.scale((width - insets.getLeft() - insets.getRight()) / sb.getWidth(),(height - insets.getTop() - insets.getBottom()) / sb.getHeight()));
            bgs=Shapes.fxShapeFromAWT(awtShape,tx);
          }
 else {
            bgs=s;
          }
        }
 else         if (radii != CornerRadii.EMPTY) {
          throw new UnsupportedOperationException("radii not yet implemented");
        }
 else {
          bgs=new Rectangle(x + insets.getLeft(),y + insets.getTop(),width - insets.getLeft() - insets.getRight(),height - insets.getTop() - insets.getBottom());
        }
        bgs.setFill(fill);
        Element bgsElement=writeShape(doc,elem,bgs);
        writeFillAttributes(bgsElement,bgs);
        bgsElement.setAttribute("stroke","none");
        elem.appendChild(bgsElement);
      }
      for (      BackgroundImage bgi : region.getBackground().getImages()) {
        throw new UnsupportedOperationException("background image not yet implemented");
      }
    }
    if (region.getBorder() != null) {
      if (region.getBorder().getImages().isEmpty() || s == null) {
        for (        BorderStroke bs : region.getBorder().getStrokes()) {
          Insets insets=bs.getInsets();
          CornerRadii radii=bs.getRadii() == null ? CornerRadii.EMPTY : bs.getRadii();
          Shape bgs=null;
          if (s != null) {
            if (region.isScaleShape()) {
              java.awt.Shape awtShape=Shapes.awtShapeFromFX(s);
              Transform tx=Transform.translate(-sb.getMinX(),-sb.getMinY());
              tx=tx.createConcatenation(Transform.translate(x + insets.getLeft(),y + insets.getTop()));
              tx=tx.createConcatenation(Transform.scale((width - insets.getLeft() - insets.getRight()) / sb.getWidth(),(height - insets.getTop() - insets.getBottom()) / sb.getHeight()));
              bgs=Shapes.fxShapeFromAWT(awtShape,tx);
            }
 else {
              bgs=s;
            }
          }
 else           if (radii != CornerRadii.EMPTY) {
            throw new UnsupportedOperationException("radii not yet implemented");
          }
 else {
            bgs=new Rectangle(x + insets.getLeft(),y + insets.getTop(),width - insets.getLeft() - insets.getRight(),height - insets.getTop() - insets.getBottom());
          }
          Element bgsElement=writeShape(doc,elem,bgs);
          writeStrokeAttributes(bgsElement,bs);
          bgsElement.setAttribute("fill","none");
          elem.appendChild(bgsElement);
        }
      }
      if (s != null) {
        for (        BorderImage bi : region.getBorder().getImages()) {
          throw new UnsupportedOperationException("border image not yet implemented");
        }
      }
    }
  }
  return elem;
}
