{
  Element elem=doc.createElement("arc");
  parent.appendChild(elem);
  StringBuilder buf=new StringBuilder();
  double centerX=node.getCenterX();
  double centerY=node.getCenterY();
  double radiusX=node.getRadiusX();
  double radiusY=node.getRadiusY();
  double startAngle=Math.toRadians(-node.getStartAngle());
  double endAngle=Math.toRadians(-node.getStartAngle() - node.getLength());
  double length=node.getLength();
  double startX=radiusX * Math.cos(startAngle);
  double startY=radiusY * Math.sin(startAngle);
  double endX=centerX + radiusX * Math.cos(endAngle);
  double endY=centerY + radiusY * Math.sin(endAngle);
  int xAxisRot=0;
  boolean largeArc=(length > 180);
  boolean sweep=(length < 0);
  buf.append('M').append(nb.toString(centerX)).append(',').append(nb.toString(centerY)).append(' ');
  if (ArcType.ROUND == node.getType()) {
    buf.append('l').append(startX).append(',').append(startY).append(' ');
  }
  buf.append('A').append(nb.toString(radiusX)).append(',').append(nb.toString(radiusY)).append(',').append(nb.toString(xAxisRot)).append(',').append(largeArc ? '1' : '0').append(',').append(sweep ? '1' : '0').append(',').append(nb.toString(endX)).append(',').append(nb.toString(endY)).append(',');
  if (ArcType.CHORD == node.getType() || ArcType.ROUND == node.getType()) {
    buf.append('Z');
  }
  return elem;
}
