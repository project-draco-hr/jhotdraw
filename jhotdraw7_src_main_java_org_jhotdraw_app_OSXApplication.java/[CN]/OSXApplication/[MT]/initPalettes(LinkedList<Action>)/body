{
  SwingUtilities.invokeLater(new Worker<LinkedList<JFrame>>(){
    public LinkedList<JFrame> construct(){
      LinkedList<JFrame> palettes=new LinkedList<JFrame>();
      LinkedList<JToolBar> toolBars=new LinkedList<JToolBar>(getModel().createToolBars(OSXApplication.this,null));
      int i=0;
      int x=0;
      for (      JToolBar tb : toolBars) {
        i++;
        tb.setFloatable(false);
        tb.setOrientation(JToolBar.VERTICAL);
        tb.setFocusable(false);
        JFrame d=new JFrame();
        d.getRootPane().putClientProperty("Window.style","small");
        d.getRootPane().putClientProperty("Quaqua.RootPane.isVertical",Boolean.FALSE);
        d.getRootPane().putClientProperty("Quaqua.RootPane.isPalette",Boolean.TRUE);
        d.setFocusable(false);
        d.setResizable(false);
        d.getContentPane().setLayout(new BorderLayout());
        d.getContentPane().add(tb,BorderLayout.CENTER);
        d.setAlwaysOnTop(true);
        d.setUndecorated(true);
        d.getRootPane().setWindowDecorationStyle(JRootPane.FRAME);
        d.getRootPane().setFont(new Font("Lucida Grande",Font.PLAIN,11));
        d.setJMenuBar(createMenuBar(null));
        d.pack();
        d.setFocusableWindowState(false);
        PreferencesUtil.installPalettePrefsHandler(prefs,"toolbar." + i,d,x);
        x+=d.getWidth();
        paletteActions.add(new TogglePaletteAction(OSXApplication.this,d,tb.getName()));
        palettes.add(d);
      }
      return palettes;
    }
    @Override protected void done(    LinkedList<JFrame> result){
      @SuppressWarnings("unchecked") LinkedList<JFrame> palettes=(LinkedList<JFrame>)result;
      if (palettes != null) {
        for (        JFrame p : palettes) {
          addPalette(p);
        }
        firePropertyChange("paletteCount",0,palettes.size());
      }
    }
  }
);
}
