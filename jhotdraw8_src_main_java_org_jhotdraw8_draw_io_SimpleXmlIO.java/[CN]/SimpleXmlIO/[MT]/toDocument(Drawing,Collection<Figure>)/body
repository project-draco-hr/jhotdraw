{
  if (selection.isEmpty() || selection.contains(internal)) {
    return toDocument(internal);
  }
  try {
    Clipping external=new SimpleClipping();
    factory.reset();
    DocumentBuilderFactory builderFactory=DocumentBuilderFactory.newInstance();
    Document doc;
    if (namespaceURI != null) {
      builderFactory.setNamespaceAware(true);
      DocumentBuilder builder=builderFactory.newDocumentBuilder();
      DOMImplementation domImpl=builder.getDOMImplementation();
      doc=domImpl.createDocument(namespaceURI,namespaceQualifier == null ? factory.figureToName(external) : namespaceQualifier + ":" + factory.figureToName(internal),null);
    }
 else {
      DocumentBuilder builder=builderFactory.newDocumentBuilder();
      doc=builder.newDocument();
      Element elem=doc.createElement(factory.figureToName(external));
      doc.appendChild(elem);
    }
    Element docElement=doc.getDocumentElement();
    String commentText=factory.createFileComment();
    if (commentText != null) {
      docElement.getParentNode().insertBefore(doc.createComment(commentText),docElement);
    }
    for (    Figure child : selection) {
      Node childNode=writeNodeRecursively(doc,child);
      if (childNode != null) {
        docElement.appendChild(doc.createTextNode("\n"));
        docElement.appendChild(childNode);
      }
    }
    docElement.appendChild(doc.createTextNode("\n"));
    return doc;
  }
 catch (  ParserConfigurationException ex) {
    throw new IOException(ex);
  }
}
