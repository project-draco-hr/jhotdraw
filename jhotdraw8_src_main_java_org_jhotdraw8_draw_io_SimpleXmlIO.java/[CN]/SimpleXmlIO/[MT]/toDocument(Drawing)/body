{
  try {
    Drawing external=factory.toExternalDrawing(internal);
    factory.reset();
    DocumentBuilderFactory builderFactory=DocumentBuilderFactory.newInstance();
    Document doc;
    if (namespaceURI != null) {
      builderFactory.setNamespaceAware(true);
      DocumentBuilder builder=builderFactory.newDocumentBuilder();
      DOMImplementation domImpl=builder.getDOMImplementation();
      doc=domImpl.createDocument(namespaceURI,namespaceQualifier == null ? factory.figureToName(external) : namespaceQualifier + ":" + factory.figureToName(internal),null);
    }
 else {
      DocumentBuilder builder=builderFactory.newDocumentBuilder();
      doc=builder.newDocument();
      Element elem=doc.createElement(factory.figureToName(external));
      doc.appendChild(elem);
    }
    Element docElement=doc.getDocumentElement();
    writeProcessingInstructions(doc,external);
    for (    String string : external.get(XML_HEAD_COMMENT_KEY)) {
      doc.insertBefore(doc.createComment(string),docElement);
    }
    writeElementAttributes(docElement,external);
    String linebreak="\n";
    for (    Figure child : external.getChildren()) {
      writeNodeRecursively(doc,docElement,child,linebreak);
    }
    for (    String string : external.get(XML_BODY_COMMENT_KEY)) {
      docElement.appendChild(doc.createTextNode(linebreak));
      docElement.appendChild(doc.createComment(string));
    }
    docElement.appendChild(doc.createTextNode(linebreak));
    for (    String string : external.get(XML_EPILOG_COMMENT_KEY)) {
      doc.appendChild(doc.createComment(string));
    }
    return doc;
  }
 catch (  ParserConfigurationException ex) {
    throw new IOException(ex);
  }
}
