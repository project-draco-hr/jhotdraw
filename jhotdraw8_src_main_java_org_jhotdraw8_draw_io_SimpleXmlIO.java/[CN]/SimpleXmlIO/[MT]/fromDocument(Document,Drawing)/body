{
  factory.reset();
  if (oldDrawing != null) {
    for (    Figure f : oldDrawing.preorderIterable()) {
      factory.createId(f);
    }
  }
  figureToElementMap.clear();
  Drawing external=null;
  NodeList list=doc.getChildNodes();
  for (int i=0; i < list.getLength(); i++) {
    Figure f=readNodesRecursively(list.item(i));
    if (f instanceof Drawing) {
      external=(Drawing)f;
      break;
    }
  }
  if (external == null) {
    if (namespaceURI == null) {
      throw new IOException("The document does not contain a drawing.");
    }
 else {
      throw new IOException("The document does not contain a drawing in namespace \"" + namespaceURI + "\".");
    }
  }
  external.set(Drawing.DOCUMENT_HOME,getDocumentHome());
  readProcessingInstructions(doc,external);
  try {
    for (    Map.Entry<Figure,Element> entry : figureToElementMap.entrySet()) {
      readElementAttributes(entry.getKey(),entry.getValue());
      readElementNodeList(entry.getKey(),entry.getValue());
    }
  }
  finally {
    figureToElementMap.clear();
  }
  Drawing internal=factory.fromExternalDrawing(external);
  internal.updateCss();
  return internal;
}
