{
  if (DEBUG)   System.out.println(this + ".exportDone " + action+ " move="+ MOVE);
  if (source instanceof DrawingView) {
    DrawingView view=(DrawingView)source;
    final Drawing drawing=view.getDrawing();
    if (action == MOVE) {
      final ArrayList<Figure> removedFigures=new ArrayList<Figure>(drawing.sort(view.getSelectedFigures()));
      DrawingListener removeListener=new DrawingListener(){
        public void areaInvalidated(        DrawingEvent e){
        }
        public void figureAdded(        DrawingEvent e){
        }
        public void figureRemoved(        DrawingEvent e){
          if (!removedFigures.contains(e.getFigure())) {
            removedFigures.add(e.getFigure());
          }
        }
      }
;
      drawing.addDrawingListener(removeListener);
      drawing.removeAll(removedFigures);
      drawing.removeDrawingListener(removeListener);
      drawing.removeAll(removedFigures);
      drawing.fireUndoableEditHappened(new AbstractUndoableEdit(){
        public String getPresentationName(){
          ResourceBundleUtil labels=ResourceBundleUtil.getLAFBundle("org.jhotdraw.draw.Labels");
          return labels.getString("editDelete");
        }
        public void undo() throws CannotUndoException {
          super.undo();
          drawing.addAll(removedFigures);
        }
        public void redo() throws CannotRedoException {
          super.redo();
          drawing.removeAll(removedFigures);
        }
      }
);
    }
  }
 else {
    super.exportDone(source,data,action);
  }
}
