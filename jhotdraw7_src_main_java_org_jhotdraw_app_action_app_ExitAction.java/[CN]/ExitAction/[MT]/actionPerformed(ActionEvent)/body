{
  final Application app=getApplication();
  if (app.isEnabled()) {
    app.setEnabled(false);
    int unsavedViewsCount=0;
    View documentToBeReviewed=null;
    URI unsavedURI=null;
    for (    View p : app.views()) {
      if (p.hasUnsavedChanges()) {
        if (p.isEnabled()) {
          documentToBeReviewed=p;
        }
        unsavedURI=p.getURI();
        unsavedViewsCount++;
      }
    }
    if (unsavedViewsCount > 0 && documentToBeReviewed == null) {
      app.setEnabled(true);
      return;
    }
    final ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.app.Labels");
switch (unsavedViewsCount) {
case 0:
{
        doExit();
        break;
      }
case 1:
{
      unsavedView=documentToBeReviewed;
      oldFocusOwner=SwingUtilities.getWindowAncestor(unsavedView.getComponent()).getFocusOwner();
      unsavedView.setEnabled(false);
      JOptionPane pane=new JOptionPane("<html>" + UIManager.getString("OptionPane.css") + "<b>"+ labels.getFormatted("application.exit.doYouWantToSave.message",(unsavedURI == null) ? labels.getString("unnamedFile") : URIUtil.getName(unsavedURI))+ "</b><p>"+ labels.getString("application.exit.doYouWantToSave.details"),JOptionPane.WARNING_MESSAGE);
      Object[] options={labels.getString("application.exit.saveOption"),labels.getString("application.exit.cancelOption"),labels.getString("application.exit.dontSaveOption")};
      pane.setOptions(options);
      pane.setInitialValue(options[0]);
      pane.putClientProperty("Quaqua.OptionPane.destructiveOption",2);
      JSheet.showSheet(pane,unsavedView.getComponent(),new SheetListener(){
        @Override public void optionSelected(        SheetEvent evt){
          Object value=evt.getValue();
          if (value == null || value.equals(labels.getString("application.exit.cancelOption"))) {
            unsavedView.setEnabled(true);
            app.setEnabled(true);
          }
 else           if (value.equals(labels.getString("application.exit.dontSaveOption"))) {
            doExit();
            unsavedView.setEnabled(true);
          }
 else           if (value.equals(labels.getString("application.exit.saveOption"))) {
            saveChanges();
          }
        }
      }
);
      break;
    }
default :
{
    JOptionPane pane=new JOptionPane("<html>" + UIManager.get("OptionPane.css") + "<b>"+ labels.getFormatted("application.exit.doYouWantToReview.message",unsavedViewsCount)+ "</b><p>"+ labels.getString("application.exit.doYouWantToReview.details"),JOptionPane.QUESTION_MESSAGE);
    Object[] options={labels.getString("application.exit.reviewChangesOption"),labels.getString("application.exit.cancelOption"),labels.getString("application.exit.discardChangesOption")};
    pane.setOptions(options);
    pane.setInitialValue(options[0]);
    pane.putClientProperty("Quaqua.OptionPane.destructiveOption",2);
    JDialog dialog=pane.createDialog(app.getComponent(),null);
    Rectangle screenBounds=dialog.getGraphicsConfiguration().getBounds();
    if (app.getComponent() == null || !screenBounds.contains(app.getComponent().getBounds())) {
      dialog.setLocation((screenBounds.width - dialog.getWidth()) / 2,(screenBounds.height - dialog.getHeight()) / 3);
    }
    dialog.setVisible(true);
    Object value=pane.getValue();
    if (value == null || value.equals(labels.getString("application.exit.cancelOption"))) {
      app.setEnabled(true);
    }
 else     if (value.equals(labels.getString("application.exit.discardChangesOption"))) {
      doExit();
      app.setEnabled(true);
    }
 else     if (value.equals(labels.getString("application.exit.reviewChangesOption"))) {
      unsavedView=documentToBeReviewed;
      reviewChanges();
    }
  }
}
}
}
