{
  super.activate(editor);
  if (workerThread != null) {
    try {
      workerThread.join();
    }
 catch (    InterruptedException ex) {
    }
  }
  final File file;
  if (useFileDialog) {
    getFileDialog().setVisible(true);
    if (getFileDialog().getFile() != null) {
      file=new File(getFileDialog().getDirectory(),getFileDialog().getFile());
    }
 else {
      file=null;
    }
  }
 else {
    if (getFileChooser().showOpenDialog(getView().getComponent()) == JFileChooser.APPROVE_OPTION) {
      file=getFileChooser().getSelectedFile();
    }
 else {
      file=null;
    }
  }
  if (file != null) {
    final ImageHolderFigure loaderFigure=((ImageHolderFigure)prototype.clone());
    Worker worker=new Worker(){
      public Object construct(){
        try {
          ((ImageHolderFigure)loaderFigure).loadImage(file);
        }
 catch (        Throwable t) {
          return t;
        }
        return null;
      }
      public void finished(      Object value){
        if (value instanceof Throwable) {
          Throwable t=(Throwable)value;
          JOptionPane.showMessageDialog(getView().getComponent(),t.getMessage(),null,JOptionPane.ERROR_MESSAGE);
          getDrawing().remove(createdFigure);
          fireToolDone();
        }
 else {
          try {
            if (createdFigure == null) {
              ((ImageHolderFigure)prototype).setImage(loaderFigure.getImageData(),loaderFigure.getBufferedImage());
            }
 else {
              ((ImageHolderFigure)createdFigure).setImage(loaderFigure.getImageData(),loaderFigure.getBufferedImage());
            }
          }
 catch (          IOException ex) {
            JOptionPane.showMessageDialog(getView().getComponent(),ex.getMessage(),null,JOptionPane.ERROR_MESSAGE);
          }
        }
      }
    }
;
    workerThread=new Thread(worker);
    workerThread.start();
  }
 else {
    if (isToolDoneAfterCreation()) {
      fireToolDone();
    }
  }
}
