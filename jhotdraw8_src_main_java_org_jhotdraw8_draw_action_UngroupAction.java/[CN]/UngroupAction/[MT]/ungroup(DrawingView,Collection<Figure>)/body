{
  if (figures.isEmpty()) {
    final Alert alert=new Alert(Alert.AlertType.INFORMATION,"Empty selection can not be ungrouped");
    alert.getDialogPane().setMaxWidth(640.0);
    alert.showAndWait();
    return;
  }
  for (  Figure f : figures) {
    if (!(f instanceof Grouping)) {
      final Alert alert=new Alert(Alert.AlertType.INFORMATION,"Only groups can be ungrouped");
      alert.getDialogPane().setMaxWidth(640.0);
      alert.showAndWait();
      return;
    }
    if (f != null && (!f.isEditable() || !f.isDecomposable())) {
      final Alert alert=new Alert(Alert.AlertType.INFORMATION,"Only editable and decomposable figures can be ungrouped");
      alert.getDialogPane().setMaxWidth(640.0);
      alert.showAndWait();
      return;
    }
    Figure parent=f.getParent();
    if (parent == null || !parent.isEditable() || !parent.isDecomposable()) {
      final Alert alert=new Alert(Alert.AlertType.INFORMATION,"Only groups in editable and decomposable parents can be ungrouped");
      alert.getDialogPane().setMaxWidth(640.0);
      alert.showAndWait();
      return;
    }
  }
  LinkedHashSet<Figure> newSelection=new LinkedHashSet<>();
  for (  Figure f : figures) {
    ungroup(view,f,newSelection);
  }
  view.getSelectedFigures().clear();
  view.getSelectedFigures().addAll(newSelection);
}
