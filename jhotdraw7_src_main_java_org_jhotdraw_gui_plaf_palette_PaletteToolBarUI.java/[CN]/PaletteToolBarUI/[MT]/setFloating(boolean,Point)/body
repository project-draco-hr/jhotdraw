{
  if (toolBar.isFloatable() == true) {
    if (dragWindow != null) {
      dragWindow.setVisible(false);
    }
    this.floating=b;
    if (b && isFloatingAllowed) {
      if (dockingSource == null) {
        dockingSource=toolBar.getParent();
        dockingSource.remove(toolBar);
      }
      constraintBeforeFloating=calculateConstraint();
      if (propertyListener != null) {
        UIManager.addPropertyChangeListener(propertyListener);
      }
      if (floatingToolBar == null) {
        floatingToolBar=createFloatingWindow(toolBar);
      }
      floatingToolBar.getContentPane().add(toolBar,BorderLayout.CENTER);
      if (floatingToolBar instanceof Window) {
        ((Window)floatingToolBar).pack();
      }
      if (floatingToolBar instanceof Window) {
        ((Window)floatingToolBar).setLocation(floatingX,floatingY);
      }
      if (floatingToolBar instanceof Window) {
        ((Window)floatingToolBar).show();
      }
    }
 else {
      if (floatingToolBar == null) {
        floatingToolBar=createFloatingWindow(toolBar);
      }
      if (floatingToolBar instanceof Window) {
        ((Window)floatingToolBar).setVisible(false);
      }
      floatingToolBar.getContentPane().remove(toolBar);
      Integer constraint=getDockingConstraint(dockingSource,p);
      if (constraint == null) {
        constraint=new Integer(0);
      }
      int orientation=mapConstraintToOrientation(constraint);
      setOrientation(orientation);
      if (dockingSource == null) {
        dockingSource=toolBar.getParent();
      }
      if (propertyListener != null) {
        UIManager.removePropertyChangeListener(propertyListener);
      }
      dockingSource.add(toolBar,constraint.intValue());
    }
    dockingSource.invalidate();
    Container dockingSourceParent=dockingSource.getParent();
    if (dockingSourceParent != null) {
      dockingSourceParent.validate();
    }
    dockingSource.repaint();
  }
}
