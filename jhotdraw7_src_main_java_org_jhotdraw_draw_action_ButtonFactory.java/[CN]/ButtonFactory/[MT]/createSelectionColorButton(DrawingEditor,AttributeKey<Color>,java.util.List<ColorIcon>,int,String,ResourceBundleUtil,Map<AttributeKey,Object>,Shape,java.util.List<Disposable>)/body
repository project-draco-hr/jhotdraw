{
  final JPopupButton popupButton=new JPopupButton();
  popupButton.setPopupAlpha(1f);
  if (defaultAttributes == null) {
    defaultAttributes=new HashMap<AttributeKey,Object>();
  }
  popupButton.setColumnCount(columnCount,false);
  boolean hasNullColor=false;
  for (  ColorIcon swatch : swatches) {
    AttributeAction a;
    HashMap<AttributeKey,Object> attributes=new HashMap<AttributeKey,Object>(defaultAttributes);
    if (swatch != null) {
      Color swatchColor=swatch.getColor();
      attributes.put(attributeKey,swatchColor);
      if (swatchColor == null || swatchColor.getAlpha() == 0) {
        hasNullColor=true;
      }
      popupButton.add(a=new AttributeAction(editor,attributes,labels.getToolTipTextProperty(labelKey),swatch));
      a.putValue(Action.SHORT_DESCRIPTION,swatch.getName());
      a.setUpdateEnabledState(false);
      dsp.add(a);
    }
 else {
      popupButton.add(new JPanel());
    }
  }
  if (!hasNullColor) {
    AttributeAction a;
    HashMap<AttributeKey,Object> attributes=new HashMap<AttributeKey,Object>(defaultAttributes);
    attributes.put(attributeKey,null);
    popupButton.add(a=new AttributeAction(editor,attributes,labels.getToolTipTextProperty("attribute.color.noColor"),new ColorIcon(null,labels.getToolTipTextProperty("attribute.color.noColor"))));
    a.putValue(Action.SHORT_DESCRIPTION,labels.getToolTipTextProperty("attribute.color.noColor"));
    a.setUpdateEnabledState(false);
    dsp.add(a);
  }
  ImageIcon chooserIcon=new ImageIcon(Images.createImage(ButtonFactory.class,"/org/jhotdraw/draw/action/images/attribute.color.colorChooser.png"));
  AttributeAction a;
  popupButton.add(a=new SelectionColorChooserAction(editor,attributeKey,labels.getToolTipTextProperty("attribute.color.colorChooser"),chooserIcon,defaultAttributes));
  a.putValue(Action.SHORT_DESCRIPTION,labels.getToolTipTextProperty("attribute.color.colorChooser"));
  dsp.add(a);
  labels.configureToolBarButton(popupButton,labelKey);
  Icon icon=new SelectionColorIcon(editor,attributeKey,labels.getIconProperty(labelKey,ButtonFactory.class).getImage(),colorShape);
  popupButton.setIcon(icon);
  popupButton.setDisabledIcon(icon);
  popupButton.setFocusable(false);
  dsp.add(new SelectionComponentRepainter(editor,popupButton));
  return popupButton;
}
