{
  if (tt.nextToken() != '[') {
    throw new ParseException("AttributeSelector: '[' expected.",tt.getLineNumber());
  }
  if (tt.nextToken() != CssTokenizer.TT_IDENT) {
    throw new ParseException("AttributeSelector: Identifier expected. Line " + tt.getLineNumber() + ".",tt.getPosition());
  }
  String attributeName=tt.currentStringValue();
  AbstractAttributeSelector selector;
switch (tt.nextToken()) {
case '=':
    if (tt.nextToken() != CssTokenizer.TT_IDENT && tt.currentToken() != CssTokenizer.TT_STRING) {
      throw new ParseException("AttributeSelector: identifier or string expected.",tt.getLineNumber());
    }
  selector=new EqualsMatchSelector(attributeName,tt.currentStringValue());
break;
case CssTokenizer.TT_INCLUDE_MATCH:
if (tt.nextToken() != CssTokenizer.TT_IDENT && tt.currentToken() != CssTokenizer.TT_STRING) {
throw new ParseException("AttributeSelector: identifier or string expected.",tt.getLineNumber());
}
selector=new IncludeMatchSelector(attributeName,tt.currentStringValue());
break;
case CssTokenizer.TT_DASH_MATCH:
if (tt.nextToken() != CssTokenizer.TT_IDENT && tt.currentToken() != CssTokenizer.TT_STRING) {
throw new ParseException("AttributeSelector: identifier or string expected. Line " + tt.getLineNumber() + ".",tt.getPosition());
}
selector=new DashMatchSelector(attributeName,tt.currentStringValue());
break;
case CssTokenizer.TT_PREFIX_MATCH:
if (tt.nextToken() != CssTokenizer.TT_IDENT && tt.currentToken() != CssTokenizer.TT_STRING) {
throw new ParseException("AttributeSelector: identifier or string expected. Line " + tt.getLineNumber() + ".",tt.getPosition());
}
selector=new PrefixMatchSelector(attributeName,tt.currentStringValue());
break;
case CssTokenizer.TT_SUFFIX_MATCH:
if (tt.nextToken() != CssTokenizer.TT_IDENT && tt.currentToken() != CssTokenizer.TT_STRING) {
throw new ParseException("AttributeSelector: identifier or string expected. Line " + tt.getLineNumber() + ".",tt.getPosition());
}
selector=new SuffixMatchSelector(attributeName,tt.currentStringValue());
break;
case CssTokenizer.TT_SUBSTRING_MATCH:
if (tt.nextToken() != CssTokenizer.TT_IDENT && tt.currentToken() != CssTokenizer.TT_STRING) {
throw new ParseException("AttributeSelector: identifier or string expected. Line " + tt.getLineNumber() + ".",tt.getPosition());
}
selector=new SubstringMatchSelector(attributeName,tt.currentStringValue());
break;
case ']':
selector=new ExistsMatchSelector(attributeName);
tt.pushBack();
break;
default :
throw new ParseException("AttributeSelector: operator expected. Line " + tt.getLineNumber() + ".",tt.getPosition());
}
if (tt.nextToken() != ']') {
throw new ParseException("AttributeSelector: ']' expected.",tt.getLineNumber());
}
return selector;
}
