{
  radials=new float[w * h];
  angulars=new float[w * h];
  brights=new float[w * h];
  alphas=new int[w * h];
  float radius=getRadius();
  float blend=(radius + 2f) / radius - 1f;
  int cx=w / 2;
  int cy=h / 2;
  for (int x=0; x < w; x++) {
    int kx=x - cx;
    int squarekx=kx * kx;
    for (int y=0; y < h; y++) {
      int ky=cy - y;
      int index=x + y * w;
      float r=(float)Math.sqrt(squarekx + ky * ky) / radius;
      float sat=r * wheelScaleFactor;
      if (r <= 1f) {
        alphas[index]=0xff000000;
        radials[index]=(float)Math.round(Math.min(1f,sat * 2f) * 5f) / 5f;
        brights[index]=(float)Math.round(Math.min(1f,1.5f - sat) * 10f) / 10f;
      }
 else {
        alphas[index]=(int)((blend - Math.min(blend,r - 1f)) * 255 / blend) << 24;
        radials[index]=1f;
        brights[index]=Math.max(0,Math.round(Math.min(1f,1.5f - sat * 1f) * 10f) / 10f);
      }
      if (alphas[index] != 0) {
        angulars[index]=Math.round((float)(Math.atan2(ky,kx) / Math.PI / 2d) * 12f) / 12f;
      }
    }
  }
}
