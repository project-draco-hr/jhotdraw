{
  if (!p.isShowing()) {
    p.setShowing(true);
    File file=p.getFile();
    final JFrame f=new JFrame();
    String title;
    if (file == null) {
      title=labels.getString("unnamedFile");
    }
 else {
      title=file.getName();
    }
    f.setTitle(labels.getFormatted("frameTitle",title,getName(),p.getMultipleOpenId()));
    f.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    f.setPreferredSize(new Dimension(400,400));
    PreferencesUtil.installFramePrefsHandler(prefs,"project",f);
    Point loc=f.getLocation();
    boolean moved;
    do {
      moved=false;
      for (Iterator i=projects().iterator(); i.hasNext(); ) {
        Project aProject=(Project)i.next();
        if (aProject != p && aProject.isShowing() && SwingUtilities.getWindowAncestor(aProject.getComponent()).getLocation().equals(loc)) {
          loc.x+=22;
          loc.y+=22;
          moved=true;
          break;
        }
      }
    }
 while (moved);
    f.setLocation(loc);
    paletteHandler.add(f,p);
    f.addWindowListener(new WindowAdapter(){
      public void windowClosing(      final WindowEvent evt){
        setCurrentProject(p);
        getModel().getAction(CloseAction.ID).actionPerformed(new ActionEvent(f,ActionEvent.ACTION_PERFORMED,"windowClosing"));
      }
    }
);
    p.addPropertyChangeListener(new PropertyChangeListener(){
      public void propertyChange(      PropertyChangeEvent evt){
        String name=evt.getPropertyName();
        if (name.equals("hasUnsavedChanges")) {
          f.getRootPane().putClientProperty("windowModified",new Boolean(p.hasUnsavedChanges()));
        }
 else         if (name.equals("file")) {
          f.setTitle((p.getFile() == null) ? "Unnamed" : p.getFile().getName());
        }
      }
    }
);
    f.setJMenuBar(createMenuBar(p));
    f.getContentPane().add(p.getComponent());
    f.setVisible(true);
  }
}
