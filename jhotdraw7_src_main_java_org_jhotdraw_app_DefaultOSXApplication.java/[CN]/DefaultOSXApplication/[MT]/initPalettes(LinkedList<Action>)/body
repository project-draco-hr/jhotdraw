{
  SwingUtilities.invokeLater(new Worker(){
    public Object construct(){
      LinkedList<JFrame> palettes=new LinkedList<JFrame>();
      LinkedList<JToolBar> toolBars=new LinkedList<JToolBar>(getModel().createToolBars(DefaultOSXApplication.this,null));
      JToolBar stb=new JToolBar();
      stb.setName(labels.getString("standardToolBarTitle"));
      addStandardActionsTo(stb);
      toolBars.addFirst(stb);
      int i=0;
      int x=0;
      for (      JToolBar tb : toolBars) {
        i++;
        tb.setFloatable(false);
        tb.setOrientation(JToolBar.VERTICAL);
        tb.setFocusable(false);
        JFrame d=new JFrame();
        d.setFocusable(false);
        d.setResizable(false);
        d.getContentPane().setLayout(new BorderLayout());
        d.getContentPane().add(tb,BorderLayout.CENTER);
        d.setAlwaysOnTop(true);
        d.setUndecorated(true);
        d.getRootPane().setWindowDecorationStyle(JRootPane.FRAME);
        d.getRootPane().setFont(new Font("Lucida Grande",Font.PLAIN,11));
        d.getRootPane().putClientProperty("Quaqua.RootPane.isVertical",Boolean.FALSE);
        d.getRootPane().putClientProperty("Quaqua.RootPane.isPalette",Boolean.TRUE);
        d.setJMenuBar(createMenuBar(null));
        d.pack();
        d.setFocusableWindowState(false);
        PreferencesUtil.installPalettePrefsHandler(prefs,"toolbar." + i,d,x);
        x+=d.getWidth();
        paletteActions.add(new OSXTogglePaletteAction(DefaultOSXApplication.this,d,tb.getName()));
        palettes.add(d);
      }
      return palettes;
    }
    public void finished(    Object result){
      LinkedList<JFrame> palettes=(LinkedList<JFrame>)result;
      for (      JFrame p : palettes) {
        addPalette(p);
      }
    }
  }
);
}
