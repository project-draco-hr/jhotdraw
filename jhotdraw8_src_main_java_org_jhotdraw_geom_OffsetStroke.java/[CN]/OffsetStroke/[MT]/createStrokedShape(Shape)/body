{
  out=new Path2D.Double();
  beginPath();
  double[] coords=new double[6];
  for (PathIterator i=s.getPathIterator(null); !i.isDone(); i.next()) {
    int type=i.currentSegment(coords);
switch (type) {
case PathIterator.SEG_MOVETO:
      beginSubpath(coords[0],coords[1]);
    break;
case PathIterator.SEG_LINETO:
  appendLine(coords[0],coords[1]);
break;
case PathIterator.SEG_QUADTO:
appendQuadratic(coords[0],coords[1],coords[2],coords[3]);
break;
case PathIterator.SEG_CUBICTO:
appendCubic(coords[0],coords[1],coords[2],coords[3],coords[4],coords[5]);
break;
case PathIterator.SEG_CLOSE:
closedSubpath();
break;
}
}
endPath();
return out;
}
