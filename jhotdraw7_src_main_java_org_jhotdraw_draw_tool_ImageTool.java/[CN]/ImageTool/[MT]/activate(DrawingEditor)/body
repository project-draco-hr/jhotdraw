{
  super.activate(editor);
  final DrawingView v=getView();
  if (v == null)   return;
  if (workerThread != null) {
    try {
      workerThread.join();
    }
 catch (    InterruptedException ex) {
    }
  }
  final File file;
  if (useFileDialog) {
    getFileDialog().setVisible(true);
    if (getFileDialog().getFile() != null) {
      file=new File(getFileDialog().getDirectory(),getFileDialog().getFile());
    }
 else {
      file=null;
    }
  }
 else {
    if (getFileChooser().showOpenDialog(v.getComponent()) == JFileChooser.APPROVE_OPTION) {
      file=getFileChooser().getSelectedFile();
    }
 else {
      file=null;
    }
  }
  if (file != null) {
    final ImageHolderFigure loaderFigure=((ImageHolderFigure)prototype.clone());
    Worker worker=new Worker(){
      @Override protected Object construct() throws IOException {
        ((ImageHolderFigure)loaderFigure).loadImage(file);
        return null;
      }
      @Override protected void done(      Object value){
        try {
          if (createdFigure == null) {
            ((ImageHolderFigure)prototype).setImage(loaderFigure.getImageData(),loaderFigure.getBufferedImage());
          }
 else {
            ((ImageHolderFigure)createdFigure).setImage(loaderFigure.getImageData(),loaderFigure.getBufferedImage());
          }
        }
 catch (        IOException ex) {
          JOptionPane.showMessageDialog(v.getComponent(),ex.getMessage(),null,JOptionPane.ERROR_MESSAGE);
        }
      }
      @Override protected void failed(      Throwable value){
        Throwable t=(Throwable)value;
        JOptionPane.showMessageDialog(v.getComponent(),t.getMessage(),null,JOptionPane.ERROR_MESSAGE);
        getDrawing().remove(createdFigure);
        fireToolDone();
      }
    }
;
    workerThread=new Thread(worker);
    workerThread.start();
  }
 else {
    if (isToolDoneAfterCreation()) {
      fireToolDone();
    }
  }
}
