{
  XmlNumberConverter nb=new XmlNumberConverter();
  StringBuilder buf=new StringBuilder();
  float[] coords=new float[6];
  boolean first=true;
  for (; !iter.isDone(); iter.next()) {
    if (first) {
      first=false;
    }
 else {
      buf.append(' ');
    }
switch (iter.currentSegment(coords)) {
case PathIterator.SEG_CLOSE:
      buf.append('Z');
    break;
case PathIterator.SEG_CUBICTO:
  buf.append('C');
for (int i=0; i < 6; i++) {
  if (i != 0) {
    buf.append(',');
  }
  buf.append(nb.toString(coords[i]));
}
break;
case PathIterator.SEG_LINETO:
buf.append('L');
for (int i=0; i < 2; i++) {
if (i != 0) {
buf.append(',');
}
buf.append(nb.toString(coords[i]));
}
break;
case PathIterator.SEG_MOVETO:
buf.append('M');
for (int i=0; i < 2; i++) {
if (i != 0) {
buf.append(',');
}
buf.append(nb.toString(coords[i]));
}
break;
case PathIterator.SEG_QUADTO:
buf.append('Q');
for (int i=0; i < 4; i++) {
if (i != 0) {
buf.append(',');
}
buf.append(nb.toString(coords[i]));
}
break;
}
}
return buf.toString();
}
