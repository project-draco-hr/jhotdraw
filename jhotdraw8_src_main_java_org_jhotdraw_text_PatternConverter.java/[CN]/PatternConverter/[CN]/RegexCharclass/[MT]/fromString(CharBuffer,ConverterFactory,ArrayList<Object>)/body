{
  for (int i=0; i < maxRepeat; i++) {
    int reset=buf.position();
    int ch=buf.remaining() > 0 ? buf.get() : -1;
    boolean found=false;
    for (int j=0; j < chars.length(); j++) {
      if (ch == chars.charAt(j)) {
        found=true;
        break;
      }
    }
    if (!found) {
      if (i < minRepeat) {
        throw new ParseException("Expected character in [" + escape(chars) + "] but found '"+ (char)ch+ "'.",buf.position());
      }
 else {
        buf.position(reset);
        return;
      }
    }
  }
}
