{
  if (!p.isShowing()) {
    p.setShowing(true);
    final JFrame f=new JFrame();
    f.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
    updateProjectTitle(p,f);
    JPanel panel=(JPanel)wrapProjectComponent(p);
    f.add(panel);
    f.setMinimumSize(new Dimension(200,200));
    f.setPreferredSize(new Dimension(600,400));
    f.setJMenuBar(createMenuBar(p,(java.util.List<Action>)panel.getClientProperty("toolBarActions")));
    PreferencesUtil.installFramePrefsHandler(prefs,"project",f);
    Point loc=f.getLocation();
    boolean moved;
    do {
      moved=false;
      for (Iterator i=projects().iterator(); i.hasNext(); ) {
        Project aProject=(Project)i.next();
        if (aProject != p && SwingUtilities.getWindowAncestor(aProject.getComponent()) != null && SwingUtilities.getWindowAncestor(aProject.getComponent()).getLocation().equals(loc)) {
          loc.x+=22;
          loc.y+=22;
          moved=true;
          break;
        }
      }
    }
 while (moved);
    f.setLocation(loc);
    f.addWindowListener(new WindowAdapter(){
      public void windowClosing(      final WindowEvent evt){
        getModel().getAction(CloseAction.ID).actionPerformed(new ActionEvent(f,ActionEvent.ACTION_PERFORMED,"windowClosing"));
      }
      @Override public void windowClosed(      final WindowEvent evt){
        if (p == getActiveProject()) {
          setActiveProject(null);
        }
        p.stop();
      }
      public void windowActivated(      WindowEvent e){
        setActiveProject(p);
      }
    }
);
    p.addPropertyChangeListener(new PropertyChangeListener(){
      public void propertyChange(      PropertyChangeEvent evt){
        String name=evt.getPropertyName();
        if (name.equals(Project.HAS_UNSAVED_CHANGES_PROPERTY) || name.equals(Project.FILE_PROPERTY) || name.equals(Project.MULTIPLE_OPEN_ID_PROPERTY)) {
          updateProjectTitle(p,f);
        }
      }
    }
);
    f.setVisible(true);
    p.start();
  }
}
