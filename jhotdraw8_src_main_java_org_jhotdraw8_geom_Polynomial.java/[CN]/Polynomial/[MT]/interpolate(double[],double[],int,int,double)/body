{
  double y;
  double dy=0;
  double[] c=new double[n];
  double[] d=new double[n];
  int ns=0;
  YDY result;
  double diff=Math.abs(x - xs[offset]);
  for (int i=0; i < n; i++) {
    double dift=Math.abs(x - xs[offset + i]);
    if (dift < diff) {
      ns=i;
      diff=dift;
    }
    c[i]=d[i]=ys[offset + i];
  }
  y=ys[offset + ns];
  ns--;
  for (int m=1; m < n; m++) {
    for (int i=0; i < n - m; i++) {
      double ho=xs[offset + i] - x;
      double hp=xs[offset + i + m] - x;
      double w=c[i + 1] - d[i];
      double den=ho - hp;
      if (den == 0.0) {
        result=new YDY(0,0);
        break;
      }
      den=w / den;
      d[i]=hp * den;
      c[i]=ho * den;
    }
    dy=(2 * (ns + 1) < (n - m)) ? c[ns + 1] : d[ns--];
    y+=dy;
  }
  return new YDY(y,dy);
}
