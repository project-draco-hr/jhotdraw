{
  final double[] roots=new double[droots.length + 1];
  int numRoots=0;
  if (droots.length > 0) {
    Double root=bisection(func,min,droots[0]);
    if (root != null) {
      roots[numRoots++]=root;
    }
    for (int i=0; i <= droots.length - 2; i++) {
      root=bisection(func,droots[i],droots[i + 1]);
      if (root != null) {
        roots[numRoots++]=root;
      }
    }
    root=bisection(func,droots[droots.length - 1],max);
    if (root != null) {
      roots[numRoots++]=root;
    }
  }
 else {
    Double root=bisection(func,min,max);
    if (root != null) {
      roots[numRoots++]=root;
    }
  }
  return trim(numRoots,roots);
}
