{
  MenuBar mb=model.createMenuBar();
  LinkedList<Menu> todo=new LinkedList<>(mb.getMenus());
  while (!todo.isEmpty()) {
    for (    MenuItem mi : todo.remove().getItems()) {
      if (mi instanceof Menu) {
        todo.add((Menu)mi);
      }
 else {
        Action a=actions.get(mi.getId());
        if (a != null) {
          Actions.bindMenuItem(mi,a);
        }
 else {
          System.err.println("DocumentOrientedApplication: Warning: no action for menu item with id=" + mi.getId());
          a=new AbstractViewAction(this,null){
            @Override protected void onActionPerformed(            ActionEvent event){
              Action ava=(Action)getActiveView().getActionMap().get(mi.getId());
              if (ava != null) {
                ava.handle(event);
              }
            }
          }
;
          Actions.bindMenuItem(mi,a,false);
        }
      }
    }
  }
  updateRecentMenuItemsMB(mb.getMenus());
  return mb;
}
