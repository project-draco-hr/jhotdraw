{
  this.target=target;
  this.minX=minX;
  this.maxX=maxX;
  this.minY=minY;
  this.maxY=maxY;
  center=new Scale(sx,sy,pivotX,pivotY);
  top=new Scale(sx,1,pivotX,0).createConcatenation(new Translate(0,(minY - pivotY) * sy));
  bottom=new Scale(sx,1,pivotX,0).createConcatenation(new Translate(0,(maxY - pivotY) * sy));
  right=new Scale(1,sy,0,pivotY).createConcatenation(new Translate((maxX - pivotX) * sx,0));
  left=new Scale(1,sy,0,pivotY).createConcatenation(new Translate((minX - pivotX) * sx,0));
  topLeft=new Scale(sx,sy,pivotX,pivotY).createConcatenation(new Translate((minX - pivotX * sx),(minY - pivotY) * sy));
  topRight=new Scale(sx,sy,pivotX,pivotY).createConcatenation(new Translate((maxX - pivotX * sx),(minY - pivotY) * sy));
  bottomRight=new Scale(sx,sy,pivotX,pivotY).createConcatenation(new Translate((minX - pivotX * sx),(maxY - pivotY) * sy));
  bottomLeft=new Scale(sx,sy,pivotX,pivotY).createConcatenation(new Translate((minX - pivotX * sx),(maxY - pivotY) * sy));
}
