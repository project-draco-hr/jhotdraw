{
  final Drawing drawing=getView().getDrawing();
  Color selectedColor=colorChooser.getColor();
  if (selectedColor != null && selectedColor.getAlpha() == 0) {
    selectedColor=null;
  }
  final Object restoreData=drawing.getAttributesRestoreData();
  drawing.willChange();
  drawing.set(key,selectedColor);
  drawing.changed();
  getEditor().setDefaultAttribute(key,selectedColor);
  final Color undoValue=selectedColor;
  UndoableEdit edit=new AbstractUndoableEdit(){
    private static final long serialVersionUID=1L;
    @Override public String getPresentationName(){
      return AttributeKeys.FONT_FACE.getPresentationName();
    }
    @Override public void undo(){
      super.undo();
      drawing.willChange();
      drawing.restoreAttributesTo(restoreData);
      drawing.changed();
    }
    @Override public void redo(){
      super.redo();
      drawing.willChange();
      drawing.set(key,undoValue);
      drawing.changed();
    }
  }
;
  fireUndoableEditHappened(edit);
}
