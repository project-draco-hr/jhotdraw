{
  HashMap<AttributeKey,Object> a=new HashMap<AttributeKey,Object>();
  readCoreAttributes(elem,a);
  readTransformAttribute(elem,a);
  readOpacityAttribute(elem,a);
  double x=toNumber(elem,readAttribute(elem,"x","0"));
  double y=toNumber(elem,readAttribute(elem,"y","0"));
  double w=toWidth(elem,readAttribute(elem,"width","0"));
  double h=toHeight(elem,readAttribute(elem,"height","0"));
  String href=readAttribute(elem,"xlink:href",null);
  if (href == null) {
    href=readAttribute(elem,"href",null);
  }
  byte[] imageData=null;
  if (href != null) {
    if (href.startsWith("data:")) {
      int semicolonPos=href.indexOf(';');
      if (semicolonPos != -1) {
        if (href.indexOf(";base64,") == semicolonPos) {
          imageData=Base64.decode(href.substring(semicolonPos + 8));
        }
 else {
          throw new IOException("Unsupported encoding in data href in image element:" + href);
        }
      }
 else {
        throw new IOException("Unsupported data href in image element:" + href);
      }
    }
 else {
      URL imageUrl=new URL(url,href);
      ByteArrayOutputStream bout=new ByteArrayOutputStream();
      byte[] buf=new byte[512];
      int len=0;
      InputStream in=null;
      try {
        in=imageUrl.openStream();
        while ((len=in.read(buf)) > 0) {
          bout.write(buf,0,len);
        }
        imageData=bout.toByteArray();
      }
 catch (      FileNotFoundException e) {
      }
 finally {
        if (in != null) {
          in.close();
        }
      }
    }
  }
  BufferedImage bufferedImage=null;
  if (imageData != null) {
    bufferedImage=ImageIO.read(new ByteArrayInputStream(imageData));
  }
  if (bufferedImage == null) {
    imageData=null;
  }
  Figure figure=factory.createImage(x,y,w,h,imageData,bufferedImage,a);
  elementObjects.put(elem,figure);
  return figure;
}
