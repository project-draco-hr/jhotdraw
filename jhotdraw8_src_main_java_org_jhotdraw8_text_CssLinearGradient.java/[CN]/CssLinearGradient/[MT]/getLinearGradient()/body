{
  if (linearGradient == null) {
    Stop[] stops=new Stop[cstops.length];
    for (int i=0; i < cstops.length; i++) {
      CssStop cstop=cstops[i];
      double offset;
      if (cstop.getOffset() == null) {
        int left=i, right=i;
        for (; left > 0 && cstops[left].getOffset() == null; left--)         ;
        for (; right < cstops.length - 1 && cstops[right].getOffset() == null; right++)         ;
        double leftOffset=cstops[left].getOffset() == null ? 0.0 : cstops[left].getOffset();
        double rightOffset=cstops[right].getOffset() == null ? 1.0 : cstops[right].getOffset();
        if (i == left) {
          offset=leftOffset;
        }
 else         if (i == right) {
          offset=rightOffset;
        }
 else {
          double mix=(double)(i - left) / (right - left);
          offset=leftOffset * (1 - mix) + rightOffset * mix;
        }
      }
 else {
        offset=cstop.getOffset();
      }
      stops[i]=new Stop(offset,cstop.getColor().getColor());
    }
    linearGradient=new LinearGradient(startX,startY,endX,endY,proportional,cycleMethod,stops);
  }
  return linearGradient;
}
