{
  if (str == null || str.trim().length() == 0) {
    if (allowsNullValue) {
      return null;
    }
 else {
      throw new ParseException("Null value is not allowed.",0);
    }
  }
  Matcher matcher=rgbHexPattern.matcher(str);
  if (matcher.matches()) {
    setLastUsedInputFormat(Format.RGB_HEX);
    try {
      String group1=matcher.group(1);
      if (group1.length() == 3) {
        return new Color(Integer.parseInt("" + group1.charAt(0) + group1.charAt(0)+ group1.charAt(1)+ group1.charAt(1)+ group1.charAt(2)+ group1.charAt(2),16));
      }
 else       if (group1.length() == 6) {
        return new Color(Integer.parseInt(group1,16));
      }
 else {
        throw new ParseException("Hex color must have 3 or 6 digits.",1);
      }
    }
 catch (    NumberFormatException nfe) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(nfe);
      throw pe;
    }
  }
  matcher=rgbIntegerPattern.matcher(str);
  if (matcher.matches()) {
    setLastUsedInputFormat(Format.RGB_INTEGER);
    try {
      return new Color(Integer.parseInt(matcher.group(1)),Integer.parseInt(matcher.group(2)),Integer.parseInt(matcher.group(3)));
    }
 catch (    NumberFormatException nfe) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(nfe);
      throw pe;
    }
catch (    IllegalArgumentException iae) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(iae);
      throw pe;
    }
  }
  matcher=rgbPercentagePattern.matcher(str);
  if (matcher.matches()) {
    setLastUsedInputFormat(Format.RGB_PERCENTAGE);
    try {
      return new Color(numberFormat.parse(matcher.group(1)).floatValue() / 100f,numberFormat.parse(matcher.group(2)).floatValue() / 100f,numberFormat.parse(matcher.group(3)).floatValue() / 100f);
    }
 catch (    NumberFormatException nfe) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(nfe);
      throw pe;
    }
catch (    IllegalArgumentException iae) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(iae);
      throw pe;
    }
  }
  matcher=hsbPercentagePattern.matcher(str);
  if (matcher.matches()) {
    setLastUsedInputFormat(Format.HSB_PERCENTAGE);
    try {
      return new Color(HSBColorSpace.getInstance(),new float[]{matcher.group(1) == null ? 0f : numberFormat.parse(matcher.group(1)).floatValue() / 360f,matcher.group(2) == null ? 1f : numberFormat.parse(matcher.group(2)).floatValue() / 100f,matcher.group(3) == null ? 1f : numberFormat.parse(matcher.group(3)).floatValue() / 100f},1f);
    }
 catch (    NumberFormatException nfe) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(nfe);
      throw pe;
    }
catch (    IllegalArgumentException iae) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(iae);
      throw pe;
    }
  }
  matcher=grayPercentagePattern.matcher(str);
  if (matcher.matches()) {
    setLastUsedInputFormat(Format.GRAY_PERCENTAGE);
    try {
      return ColorUtil.toColor(ColorSpace.getInstance(ColorSpace.CS_GRAY),new float[]{matcher.group(1) == null ? 0f : numberFormat.parse(matcher.group(1)).floatValue() / 100f});
    }
 catch (    NumberFormatException nfe) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(nfe);
      throw pe;
    }
catch (    IllegalArgumentException iae) {
      ParseException pe=new ParseException(str,0);
      pe.initCause(iae);
      throw pe;
    }
  }
  throw new ParseException(str,0);
}
