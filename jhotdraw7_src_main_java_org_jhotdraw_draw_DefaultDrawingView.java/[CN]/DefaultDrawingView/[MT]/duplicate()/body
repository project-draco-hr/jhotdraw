{
  Collection<Figure> sorted=getDrawing().sort(getSelectedFigures());
  HashMap<Figure,Figure> originalToDuplicateMap=new HashMap<Figure,Figure>(sorted.size());
  clearSelection();
  Drawing drawing=getDrawing();
  final ArrayList<Figure> duplicates=new ArrayList<Figure>(sorted.size());
  AffineTransform tx=new AffineTransform();
  tx.translate(5,5);
  for (  Figure f : sorted) {
    Figure d=(Figure)f.clone();
    d.transform(tx);
    duplicates.add(d);
    originalToDuplicateMap.put(f,d);
    drawing.add(d);
  }
  for (  Figure f : duplicates) {
    f.remap(originalToDuplicateMap);
  }
  addToSelection(duplicates);
  getDrawing().fireUndoableEditHappened(new AbstractUndoableEdit(){
    public String getPresentationName(){
      ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.draw.Labels");
      return labels.getString("edit.duplicate.text");
    }
    public void undo() throws CannotUndoException {
      super.undo();
      getDrawing().removeAll(duplicates);
    }
    public void redo() throws CannotRedoException {
      super.redo();
      getDrawing().addAll(duplicates);
    }
  }
);
}
