{
  saturations=new float[w * h];
  hues=new float[w * h];
  brights=new float[w * h];
  alphas=new int[w * h];
  float radius=getRadius();
  float blend=(radius + 2f) / radius - 1f;
  int cx=w / 2;
  int cy=h / 2;
  for (int x=0; x < w; x++) {
    int kx=x - cx;
    int squarekx=kx * kx;
    for (int y=0; y < h; y++) {
      int ky=cy - y;
      int index=x + y * w;
      float r=(float)Math.sqrt(squarekx + ky * ky) / radius;
      float sat=r;
      if (r <= 1f) {
        alphas[index]=0xff000000;
        saturations[index]=1f;
        brights[index]=1f - sat;
      }
 else {
        alphas[index]=(int)((blend - Math.min(blend,r - 1f)) * 255 / blend) << 24;
        saturations[index]=1f;
        brights[index]=0;
      }
      if (alphas[index] != 0) {
        hues[index]=(float)(Math.atan2(ky,kx) / Math.PI / 2d);
      }
    }
  }
}
