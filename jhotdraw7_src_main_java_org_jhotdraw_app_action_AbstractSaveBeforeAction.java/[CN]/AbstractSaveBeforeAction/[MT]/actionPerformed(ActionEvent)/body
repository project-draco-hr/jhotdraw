{
  final DocumentView p=getCurrentView();
  if (p.isEnabled()) {
    final ResourceMap labels=getFrameworkResourceMap();
    Window wAncestor=SwingUtilities.getWindowAncestor(p.getComponent());
    oldFocusOwner=(wAncestor == null) ? null : wAncestor.getFocusOwner();
    p.setEnabled(false);
    if (p.isModified()) {
      JOptionPane pane=new JOptionPane("<html>" + UIManager.getString("OptionPane.css") + labels.getString("File.saveBefore.OptionPane.message"),JOptionPane.WARNING_MESSAGE);
      Object[] options={labels.getString("File.save.Button.text"),labels.getString("OptionPane.cancel.Button.text"),labels.getString("File.dontSave.Button.text")};
      pane.setOptions(options);
      pane.setInitialValue(options[0]);
      pane.putClientProperty("Quaqua.OptionPane.destructiveOption",new Integer(2));
      JSheet.showSheet(pane,p.getComponent(),new SheetListener(){
        public void optionSelected(        SheetEvent evt){
          Object value=evt.getValue();
          if (value == null || value.equals(labels.getString("OptionPane.cancel.Button.text"))) {
            p.setEnabled(true);
          }
 else           if (value.equals(labels.getString("File.dontSave.Button.text"))) {
            doIt(p);
            p.setEnabled(true);
          }
 else           if (value.equals(labels.getString("File.save.Button.text"))) {
            saveChanges(p);
          }
        }
      }
);
    }
 else {
      doIt(p);
      p.setEnabled(true);
      if (oldFocusOwner != null) {
        oldFocusOwner.requestFocus();
      }
    }
  }
}
