{
  java.awt.GridBagConstraints gridBagConstraints;
  hueGroup=new javax.swing.ButtonGroup();
  sysGroup=new javax.swing.ButtonGroup();
  scrollPane=new javax.swing.JScrollPane();
  disclosureButton=new javax.swing.JToggleButton();
  sysRGBToggle=new javax.swing.JToggleButton();
  sysRYBToggle=new javax.swing.JToggleButton();
  presetCombo=new javax.swing.JComboBox();
  mixerPanel=new javax.swing.JPanel();
  harmonicWheel=new org.jhotdraw.color.JHarmonicColorWheel();
  customHueRadio=new javax.swing.JRadioButton();
  customHueLabel=new javax.swing.JLabel();
  customHueField=new org.jhotdraw.gui.JDoubleTextField();
  customHueLabel2=new javax.swing.JLabel();
  analogousRadio=new javax.swing.JRadioButton();
  analogousLabel1=new javax.swing.JLabel();
  analogousField=new org.jhotdraw.gui.JDoubleTextField();
  analogousLabel2=new javax.swing.JLabel();
  primaryRadio=new javax.swing.JRadioButton();
  primaryLabel1=new javax.swing.JLabel();
  primaryField=new org.jhotdraw.gui.JDoubleTextField();
  primaryLabel2=new javax.swing.JLabel();
  clashRadio=new javax.swing.JRadioButton();
  clashLabel1=new javax.swing.JLabel();
  clashField=new org.jhotdraw.gui.JDoubleTextField();
  clashLabel2=new javax.swing.JLabel();
  triadRadio=new javax.swing.JRadioButton();
  triadLabel1=new javax.swing.JLabel();
  triadField=new org.jhotdraw.gui.JDoubleTextField();
  triadLabel2=new javax.swing.JLabel();
  splitComplementaryRadio=new javax.swing.JRadioButton();
  splitComplementaryLabel1=new javax.swing.JLabel();
  splitField=new org.jhotdraw.gui.JDoubleTextField();
  splitComplementaryLabel2=new javax.swing.JLabel();
  complementaryRadio=new javax.swing.JRadioButton();
  complementaryLabel1=new javax.swing.JLabel();
  complementaryField=new org.jhotdraw.gui.JDoubleTextField();
  complementaryLabel2=new javax.swing.JLabel();
  achromaticCheck=new javax.swing.JCheckBox();
  achromaticLabel1=new javax.swing.JLabel();
  achromaticField=new org.jhotdraw.gui.JDoubleTextField();
  achromaticLabel2=new javax.swing.JLabel();
  monochromaticCheck=new javax.swing.JCheckBox();
  monochromaticLabel1=new javax.swing.JLabel();
  monochromaticField=new org.jhotdraw.gui.JDoubleTextField();
  monochromaticLabel2=new javax.swing.JLabel();
  saturationSlider=new javax.swing.JSlider();
  springPanel=new javax.swing.JPanel();
  setLayout(new java.awt.GridBagLayout());
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;
  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;
  gridBagConstraints.weightx=1.0;
  gridBagConstraints.weighty=0.5;
  add(scrollPane,gridBagConstraints);
  disclosureButton.setSelected(true);
  disclosureButton.setText("Show Mixer");
  disclosureButton.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      mixerDisclosurePerformed(evt);
    }
  }
);
  add(disclosureButton,new java.awt.GridBagConstraints());
  sysGroup.add(sysRGBToggle);
  sysRGBToggle.setSelected(true);
  sysRGBToggle.setText("RGB");
  sysRGBToggle.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      systemChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridy=1;
  add(sysRGBToggle,gridBagConstraints);
  sysGroup.add(sysRYBToggle);
  sysRYBToggle.setText("RYB");
  sysRYBToggle.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      systemChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridy=1;
  add(sysRYBToggle,gridBagConstraints);
  presetCombo.setEditable(true);
  presetCombo.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      presetPerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.EAST;
  add(presetCombo,gridBagConstraints);
  mixerPanel.setLayout(new java.awt.GridBagLayout());
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.gridy=0;
  gridBagConstraints.gridheight=java.awt.GridBagConstraints.REMAINDER;
  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;
  gridBagConstraints.weightx=1.0;
  gridBagConstraints.weighty=1.0;
  mixerPanel.add(harmonicWheel,gridBagConstraints);
  hueGroup.add(customHueRadio);
  customHueRadio.setText("Custom");
  customHueRadio.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(customHueRadio,gridBagConstraints);
  customHueLabel.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(customHueLabel,gridBagConstraints);
  customHueField.setColumns(3);
  customHueField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  customHueField.setText("30");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(customHueField,gridBagConstraints);
  customHueLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  customHueLabel2.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(customHueLabel2,gridBagConstraints);
  hueGroup.add(analogousRadio);
  analogousRadio.setSelected(true);
  analogousRadio.setText("Analogous");
  analogousRadio.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(analogousRadio,gridBagConstraints);
  analogousLabel1.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(analogousLabel1,gridBagConstraints);
  analogousField.setColumns(3);
  analogousField.setEditable(false);
  analogousField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  analogousField.setText("30");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(analogousField,gridBagConstraints);
  analogousLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  analogousLabel2.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(analogousLabel2,gridBagConstraints);
  hueGroup.add(primaryRadio);
  primaryRadio.setText("Primary");
  primaryRadio.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(primaryRadio,gridBagConstraints);
  primaryLabel1.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(primaryLabel1,gridBagConstraints);
  primaryField.setColumns(3);
  primaryField.setEditable(false);
  primaryField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  primaryField.setText("120");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(primaryField,gridBagConstraints);
  primaryLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  primaryLabel2.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(primaryLabel2,gridBagConstraints);
  hueGroup.add(clashRadio);
  clashRadio.setText("Clash");
  clashRadio.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(clashRadio,gridBagConstraints);
  clashLabel1.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(clashLabel1,gridBagConstraints);
  clashField.setColumns(3);
  clashField.setEditable(false);
  clashField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  clashField.setText("90");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(clashField,gridBagConstraints);
  clashLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  clashLabel2.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(clashLabel2,gridBagConstraints);
  hueGroup.add(triadRadio);
  triadRadio.setText("Triad");
  triadRadio.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(triadRadio,gridBagConstraints);
  triadLabel1.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(triadLabel1,gridBagConstraints);
  triadField.setColumns(3);
  triadField.setEditable(false);
  triadField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  triadField.setText("120");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(triadField,gridBagConstraints);
  triadLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  triadLabel2.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(triadLabel2,gridBagConstraints);
  hueGroup.add(splitComplementaryRadio);
  splitComplementaryRadio.setText("Split Complementary");
  splitComplementaryRadio.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(splitComplementaryRadio,gridBagConstraints);
  splitComplementaryLabel1.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(splitComplementaryLabel1,gridBagConstraints);
  splitField.setColumns(3);
  splitField.setEditable(false);
  splitField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  splitField.setText("150");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(splitField,gridBagConstraints);
  splitComplementaryLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  splitComplementaryLabel2.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(splitComplementaryLabel2,gridBagConstraints);
  hueGroup.add(complementaryRadio);
  complementaryRadio.setText("Complementary");
  complementaryRadio.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(complementaryRadio,gridBagConstraints);
  complementaryLabel1.setText("+");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(complementaryLabel1,gridBagConstraints);
  complementaryField.setColumns(3);
  complementaryField.setEditable(false);
  complementaryField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  complementaryField.setText("180");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(complementaryField,gridBagConstraints);
  complementaryLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  complementaryLabel2.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(complementaryLabel2,gridBagConstraints);
  achromaticCheck.setText("Achromatic");
  achromaticCheck.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(achromaticCheck,gridBagConstraints);
  achromaticLabel1.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(achromaticLabel1,gridBagConstraints);
  achromaticField.setColumns(3);
  achromaticField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  achromaticField.setText("10");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(achromaticField,gridBagConstraints);
  achromaticLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  achromaticLabel2.setText("%");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(achromaticLabel2,gridBagConstraints);
  monochromaticCheck.setSelected(true);
  monochromaticCheck.setText("Monochromatic");
  monochromaticCheck.addActionListener(new java.awt.event.ActionListener(){
    public void actionPerformed(    java.awt.event.ActionEvent evt){
      ruleChangePerformed(evt);
    }
  }
);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=2;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(monochromaticCheck,gridBagConstraints);
  monochromaticLabel1.setText("??");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=3;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(monochromaticLabel1,gridBagConstraints);
  monochromaticField.setColumns(3);
  monochromaticField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
  monochromaticField.setText("10");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=4;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(monochromaticField,gridBagConstraints);
  monochromaticLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
  monochromaticLabel2.setText("%");
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=5;
  gridBagConstraints.fill=java.awt.GridBagConstraints.HORIZONTAL;
  gridBagConstraints.anchor=java.awt.GridBagConstraints.LINE_START;
  mixerPanel.add(monochromaticLabel2,gridBagConstraints);
  saturationSlider.setOrientation(javax.swing.JSlider.VERTICAL);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridx=1;
  gridBagConstraints.gridy=0;
  gridBagConstraints.gridheight=java.awt.GridBagConstraints.REMAINDER;
  gridBagConstraints.fill=java.awt.GridBagConstraints.VERTICAL;
  mixerPanel.add(saturationSlider,gridBagConstraints);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.weighty=1.0;
  mixerPanel.add(springPanel,gridBagConstraints);
  gridBagConstraints=new java.awt.GridBagConstraints();
  gridBagConstraints.gridwidth=java.awt.GridBagConstraints.REMAINDER;
  gridBagConstraints.fill=java.awt.GridBagConstraints.BOTH;
  gridBagConstraints.weightx=1.0;
  gridBagConstraints.weighty=0.5;
  add(mixerPanel,gridBagConstraints);
}
