{
  final ODGRectFigure odgRect=(ODGRectFigure)getOwner();
  final Dimension2DDouble oldValue=originalArc2D;
  final Dimension2DDouble newValue=odgRect.getArc();
  view.getDrawing().fireUndoableEditHappened(new AbstractUndoableEdit(){
    private final static long serialVersionUID=1L;
    @Override public String getPresentationName(){
      ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.samples.odg.Labels");
      return labels.getString("arc");
    }
    @Override public void undo() throws CannotUndoException {
      super.undo();
      odgRect.willChange();
      odgRect.setArc(oldValue);
      odgRect.changed();
    }
    @Override public void redo() throws CannotRedoException {
      super.redo();
      odgRect.willChange();
      odgRect.setArc(newValue);
      odgRect.changed();
    }
  }
);
}
