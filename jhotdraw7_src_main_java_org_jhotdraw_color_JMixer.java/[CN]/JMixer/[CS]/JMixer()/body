{
  initComponents();
  Font smallFont=new Font("Lucida Grande",Font.PLAIN,11);
  for (  Component c : mixerPanel.getComponents()) {
    c.setFont(smallFont);
  }
  swatchesList=new JList(){
    @Override public String getToolTipText(    MouseEvent evt){
      int index=locationToIndex(evt.getPoint());
      Object item=getModel().getElementAt(index);
      JComponent c=(JComponent)getCellRenderer().getListCellRendererComponent(this,item,index,false,false);
      return c.getToolTipText();
    }
  }
;
  swatchesList.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
  swatchesList.setVisibleRowCount(5);
  scrollPane.setViewportView(swatchesList);
  ColorSliderModel m=harmonicWheel.getModel();
  scrollPane.setPreferredSize(new Dimension(100,100));
  swatchesList.setModel((ListModel)harmonicWheel.getHarmonicColorModel());
  swatchesList.setCellRenderer(new ColorListCellRenderer());
  harmonicWheel.getHarmonicColorModel().addPropertyChangeListener(new PropertyChangeListener(){
    public void propertyChange(    PropertyChangeEvent evt){
      String name=evt.getPropertyName();
    }
  }
);
  harmonicWheel.getHarmonicColorModel().setLightnessRule(new MonochromaticHarmonicRule());
  harmonicWheel.getHarmonicColorModel().setColorSystem(new HSLRYBColorSystem());
}
