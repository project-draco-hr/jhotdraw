{
  if (!v.isShowing()) {
    v.setShowing(true);
    final JInternalFrame f=new JInternalFrame();
    f.setDefaultCloseOperation(JInternalFrame.DO_NOTHING_ON_CLOSE);
    f.setClosable(getAction(v,CloseFileAction.ID) != null);
    f.setMaximizable(true);
    f.setResizable(true);
    f.setIconifiable(false);
    f.setSize(new Dimension(400,400));
    updateViewTitle(v,f);
    PreferencesUtil.installInternalFramePrefsHandler(prefs,"view",f,desktopPane);
    Point loc=new Point(desktopPane.getInsets().left,desktopPane.getInsets().top);
    boolean moved;
    do {
      moved=false;
      for (Iterator i=views().iterator(); i.hasNext(); ) {
        View aView=(View)i.next();
        if (aView != v && aView.isShowing() && SwingUtilities.getRootPane(aView.getComponent()).getParent().getLocation().equals(loc)) {
          Point offset=SwingUtilities.convertPoint(SwingUtilities.getRootPane(aView.getComponent()),0,0,SwingUtilities.getRootPane(aView.getComponent()).getParent());
          loc.x+=Math.max(offset.x,offset.y);
          loc.y+=Math.max(offset.x,offset.y);
          moved=true;
          break;
        }
      }
    }
 while (moved);
    f.setLocation(loc);
    f.addInternalFrameListener(new InternalFrameAdapter(){
      @Override public void internalFrameClosing(      final InternalFrameEvent evt){
        getAction(v,CloseFileAction.ID).actionPerformed(new ActionEvent(f,ActionEvent.ACTION_PERFORMED,"windowClosing"));
      }
      @Override public void internalFrameClosed(      final InternalFrameEvent evt){
        v.stop();
      }
    }
);
    v.addPropertyChangeListener(new PropertyChangeListener(){
      @Override public void propertyChange(      PropertyChangeEvent evt){
        String name=evt.getPropertyName();
        if (name == View.HAS_UNSAVED_CHANGES_PROPERTY || name == View.URI_PROPERTY) {
          updateViewTitle(v,f);
        }
      }
    }
);
    f.addPropertyChangeListener(new PropertyChangeListener(){
      @Override public void propertyChange(      PropertyChangeEvent evt){
        String name=evt.getPropertyName();
        if ("selected".equals(name)) {
          if (evt.getNewValue().equals(Boolean.TRUE)) {
            setActiveView(v);
          }
 else {
            if (v == getActiveView()) {
              setActiveView(null);
            }
          }
        }
      }
    }
);
    f.getContentPane().add(v.getComponent());
    f.setVisible(true);
    desktopPane.add(f);
    if (desktopPane.getComponentCount() == 1) {
      try {
        f.setMaximum(true);
      }
 catch (      PropertyVetoException ex) {
      }
    }
    f.toFront();
    try {
      f.setSelected(true);
    }
 catch (    PropertyVetoException e) {
    }
    v.getComponent().requestFocusInWindow();
    v.start();
  }
}
