{
  InvocationHandler handler=new DefaultInvoker(){
    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      if (listenerMethod.equals(method)) {
        if (targetMethod.getParameterTypes().length == 0) {
          return targetMethod.invoke(target,new Object[0]);
        }
 else {
          return targetMethod.invoke(target,args);
        }
      }
 else {
        return super.invoke(proxy,method,args);
      }
    }
  }
;
  Class<?> cls=listenerMethod.getDeclaringClass();
  ClassLoader cl=cls.getClassLoader();
  return Proxy.newProxyInstance(cl,new Class<?>[]{cls},handler);
}
