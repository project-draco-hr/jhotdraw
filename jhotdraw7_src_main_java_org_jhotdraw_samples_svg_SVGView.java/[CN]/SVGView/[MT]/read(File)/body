{
  try {
    JFileChooser fc=getOpenChooser();
    final Drawing drawing=createDrawing();
    InputFormat selectedFormat=fileFilterInputFormatMap.get(fc.getFileFilter());
    boolean success=false;
    if (selectedFormat != null) {
      try {
        selectedFormat.read(f,drawing);
        success=true;
      }
 catch (      Exception e) {
      }
    }
    if (!success) {
      for (      InputFormat sfi : drawing.getInputFormats()) {
        if (sfi != selectedFormat) {
          try {
            sfi.read(f,drawing);
            success=true;
            break;
          }
 catch (          Exception e) {
          }
        }
      }
    }
    if (!success) {
      ResourceBundleUtil labels=ResourceBundleUtil.getLAFBundle("org.jhotdraw.draw.Labels");
      throw new IOException(labels.getFormatted("errorUnsupportedFileFormat",f.getName()));
    }
    SwingUtilities.invokeAndWait(new Runnable(){
      public void run(){
        view.getDrawing().removeUndoableEditListener(undo);
        view.setDrawing(drawing);
        view.getDrawing().addUndoableEditListener(undo);
        undo.discardAllEdits();
      }
    }
);
  }
 catch (  InterruptedException e) {
    InternalError error=new InternalError();
    e.initCause(e);
    throw error;
  }
catch (  InvocationTargetException e) {
    InternalError error=new InternalError();
    error.initCause(e);
    throw error;
  }
}
