{
  Graphics2D g=(Graphics2D)gr;
  g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  g.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,RenderingHints.VALUE_FRACTIONALMETRICS_ON);
  g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
  if ((component instanceof JToolBar) && ((((JToolBar)component).getUI()) instanceof PaletteToolBarUI)) {
    JToolBar c=(JToolBar)component;
    if (c.isFloatable()) {
      int hx=x, hy=y, hw=w, hh=h;
      if (c.getOrientation() == HORIZONTAL) {
        if (c.getComponentOrientation().isLeftToRight()) {
          int barW=18;
          int barH=h;
          int barX=0;
          int barY=0;
          int borderColor=0xffa5a5a5;
          float[] stops=enabledStops;
          Color[] stopColors=enabledStopColors;
          g.setColor(new Color(borderColor,true));
          g.drawRect(barX,barY,barW - 1,barH - 1);
          LinearGradientPaint lgp=new LinearGradientPaint(new Point2D.Float(1,1),new Point2D.Float(19,1),stops,stopColors,MultipleGradientPaint.CycleMethod.REPEAT);
          g.setPaint(lgp);
          g.fillRect(barX + 1,barX + 1,barW - 2,barH - 2);
          Icon icon=(Icon)c.getClientProperty(PaletteToolBarUI.TOOLBAR_ICON_PROPERTY);
          if (icon != null) {
            icon.paintIcon(component,gr,barX + (barW - icon.getIconWidth()) / 2,barY + barH - 4 - icon.getIconHeight());
          }
          int textIconGap=(c.getClientProperty(PaletteToolBarUI.TOOLBAR_ICON_PROPERTY) instanceof Integer) ? (Integer)c.getClientProperty(PaletteToolBarUI.TOOLBAR_ICON_PROPERTY) : 2;
          String theTitle=c.getName();
          if (theTitle != null) {
            FontMetrics fm=g.getFontMetrics();
            int titleW;
            titleW=barH - 8;
            if (icon != null) {
              titleW-=icon.getIconHeight() + textIconGap;
            }
            theTitle=clippedText(theTitle,fm,titleW);
            AffineTransform savedTransform=g.getTransform();
            AffineTransform t=g.getTransform();
            t.rotate(Math.PI / -2d,barX + 2 + fm.getAscent(),titleW + 4);
            g.setTransform(t);
            g.setColor(Color.black);
            g.drawString(theTitle,barX + 2 + fm.getAscent(),titleW + 4);
            g.setTransform(savedTransform);
          }
        }
 else {
          g.setColor(bright);
          g.fillRect(hw - hx - 3,hy + 2,1,hh - 4);
          g.fillRect(hw - hx - 5,hy + 2,1,hh - 4);
          g.setColor(dark);
          g.fillRect(hw - hx - 2,hy + 2,1,hh - 4);
          g.fillRect(hw - hx - 6,hy + 2,1,hh - 4);
        }
      }
 else {
        g.setColor(bright);
        g.fillRect(hx + 2,hy + 2,hw - 4,1);
        g.fillRect(hx + 2,hy + 5,hw - 4,1);
        g.setColor(dark);
        g.fillRect(hx + 2,hy + 3,hw - 4,1);
        g.fillRect(hx + 2,hy + 6,hw - 4,1);
      }
    }
  }
}
