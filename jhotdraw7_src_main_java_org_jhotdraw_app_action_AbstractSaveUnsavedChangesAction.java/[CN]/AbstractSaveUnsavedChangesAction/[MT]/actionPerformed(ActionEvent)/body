{
  Application app=getApplication();
  View av=getActiveView();
  if (av == null) {
    if (isMayCreateView()) {
      av=app.createView();
      app.add(av);
      app.show(av);
    }
 else {
      return;
    }
  }
  final View v=av;
  if (v.isEnabled()) {
    final ResourceBundleUtil labels=ResourceBundleUtil.getBundle("org.jhotdraw.app.Labels");
    Window wAncestor=SwingUtilities.getWindowAncestor(v.getComponent());
    oldFocusOwner=(wAncestor == null) ? null : wAncestor.getFocusOwner();
    v.setEnabled(false);
    if (v.hasUnsavedChanges()) {
      URI unsavedURI=v.getURI();
      JOptionPane pane=new JOptionPane("<html>" + UIManager.getString("OptionPane.css") + "<b>"+ labels.getFormatted("file.saveBefore.doYouWantToSave.message",(unsavedURI == null) ? labels.getString("unnamedFile") : URIUtil.getName(unsavedURI))+ "</b><p>"+ labels.getString("file.saveBefore.doYouWantToSave.details"),JOptionPane.WARNING_MESSAGE);
      Object[] options={labels.getString("file.saveBefore.saveOption.text"),labels.getString("file.saveBefore.cancelOption.text"),labels.getString("file.saveBefore.dontSaveOption.text")};
      pane.setOptions(options);
      pane.setInitialValue(options[0]);
      pane.putClientProperty("Quaqua.OptionPane.destructiveOption",2);
      JSheet.showSheet(pane,v.getComponent(),new SheetListener(){
        @Override public void optionSelected(        SheetEvent evt){
          Object value=evt.getValue();
          if (value == null || value.equals(labels.getString("file.saveBefore.cancelOption.text"))) {
            v.setEnabled(true);
          }
 else           if (value.equals(labels.getString("file.saveBefore.dontSaveOption.text"))) {
            doIt(v);
            v.setEnabled(true);
          }
 else           if (value.equals(labels.getString("file.saveBefore.saveOption.text"))) {
            saveView(v);
          }
        }
      }
);
    }
 else {
      doIt(v);
      v.setEnabled(true);
      if (oldFocusOwner != null) {
        oldFocusOwner.requestFocus();
      }
    }
  }
}
